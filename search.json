[{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 MicrogliaMorphologyR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/articles/MicrogliaMorphologyR.html","id":"load-packages-and-set-seed-for-reproducibility-of-results-shown-here","dir":"Articles","previous_headings":"Load in MicrogliaMorphology ImageJ macro output and explore data","what":"Load packages and set seed for reproducibility of results shown here","title":"How to use MicrogliaMorphologyR","text":"start loading MicrogliaMorphology output (FracLac SkeletonAnalysis files) formatting data using metadata_columns function final dataframe contains cell-level data, every row single cell every column either metadata descriptor morphology measure. metadata_columns function relies piece metadata separated common deliminator “_” “-” “Name” column. can read function calling help page using ?metadata_columns","code":"library(MicrogliaMorphologyR) library(factoextra) library(ppclust) set.seed(1)"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/articles/MicrogliaMorphologyR.html","id":"load-in-your-fraclac-and-skeleton-data-tidy-and-merge-into-final-data-frame","dir":"Articles","previous_headings":"Load in MicrogliaMorphology ImageJ macro output and explore data","what":"Load in your fraclac and skeleton data, tidy, and merge into final data frame","title":"How to use MicrogliaMorphologyR","text":"demonstration purposes, use one datasets comes packaged MicrogliaMorphologyR. ‘data_2xLPS_mouse’ contains morphology data collected female male 8 week-old Cx3cr1-eGFP mice, given 2 .p. injections either PBS vehicle solution 0.5mg/kg lipopolysaccharides (LPS), spaced 24 hours apart. genetic mouse line, Cx3cr1-expressing cells including microglia endogenous reporter makes green immunofluorescently imaged. Brains collected 3 hours final injections, brain sections immunofluorescently stained imaged 2 additional, commonly used microglia markers: P2ry12, Iba1.","code":"fraclac.dir <- \"insert path to fraclac directory\" skeleton.dir <- \"insert path to skeleton analysis directory\"  # these steps may be very time-intensive, depending on how many cells you are analyzing (i.e., on the order of 1000s of cells).  fraclac <- fraclac_tidying(fraclac.dir)  skeleton <- skeleton_tidying(skeleton.dir)  data <- merge_data(fraclac, skeleton) finaldata <- metadata_columns(data, c(\"Antibody\",\"Paper\",\"Cohort\",\"MouseID\",\"Sex\",\"Treatment\",\"BrainRegion\",\"Subregion\"), sep=\"_\")"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/articles/MicrogliaMorphologyR.html","id":"load-in-example-dataset","dir":"Articles","previous_headings":"Load in MicrogliaMorphology ImageJ macro output and explore data","what":"Load in example dataset","title":"How to use MicrogliaMorphologyR","text":"","code":"data_2xLPS <- MicrogliaMorphologyR::data_2xLPS_mouse"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/articles/MicrogliaMorphologyR.html","id":"generate-heatmap-of-correlations-across-features","dir":"Articles","previous_headings":"Load in MicrogliaMorphology ImageJ macro output and explore data","what":"Generate heatmap of correlations across features","title":"How to use MicrogliaMorphologyR","text":"start exploring morphology features measured MicrogliaMorphology relate generating heatmap spearman’s correlations across 27 different morphology features. expected, features describe similar aspects morphology highly correlated features . example, numbers end point voxels, junction voxels, triple points, branches, junctions explain cell branching complexity highly correlated .  MicrogliaMorphologyR comes number functions allow explore features extreme outliers normalizing various ways changes feature distributions. allows explore transform data dataset-appropriate manner downstream analyses. later steps, running Principal Components Analysis (PCA) transformed data. PCA statistical technique identifies significant variables relationships data, can used pre-processing step reduce noise remove irrelevant features improve efficiency accuracy downstream analysis. PCA assumes variables dataset follow normal distribution, violations normality can affect accuracy PCA results. Thus, important transform data distributions values individual morphology measure approximate normality much possible. morphology features measured using MicrogliaMorphology often suitable PCA log transformation. many measures contain zero values (e.g., numbers junctions, numbers branches, etc.), need add constant data prior log transforming.","code":"featurecorrelations(data_2xLPS,                     featurestart=9, featureend=35,                     rthresh=0.8, pthresh=0.05,                     title=\"Correlations across features\") # to get the underlying stats depicted in the heatmap above correlationstats <- featurecorrelations_stats(data_2xLPS,                                              featurestart=9, featureend=35,                                              rthresh=0.8, pthresh=0.05) correlationstats %>% head() #>       measure_a             measure_b correlation pvalues Significant #> 1 # of branches         # of branches   1.0000000      NA        <NA> #> 2 # of branches # of end point voxels   0.9425514       0 significant #> 3 # of branches  # of junction voxels   0.9757485       0 significant #> 4 # of branches        # of junctions   0.9970174       0 significant #> 5 # of branches # of quadruple points   0.5349538       0          ns #> 6 # of branches      # of slab voxels   0.9464104       0 significant"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/articles/MicrogliaMorphologyR.html","id":"exploratory-data-visualization-and-data-transformation-for-downstream-analyses","dir":"Articles","previous_headings":"Load in MicrogliaMorphology ImageJ macro output and explore data","what":"Exploratory data visualization and data transformation for downstream analyses","title":"How to use MicrogliaMorphologyR","text":"","code":"# gather your numerical morphology data into one column ('measure') which contains the feature name, and another column ('value') which contains measured values data_2xLPS_gathered <- data_2xLPS %>% gather(measure, value, 9:ncol(data_2xLPS))  # check for outliers outliers_boxplots(data_2xLPS_gathered) outliers_distributions(data_2xLPS_gathered) # checking different normalization features normalize_logplots(data_2xLPS_gathered,1) normalize_minmax(data_2xLPS_gathered) normalize_scaled(data_2xLPS_gathered) # transform your data in appropriate manner for downstream analyses # we will use the logtransformed data as our PCA input data_2xLPS_logtransformed <- transform_log(data_2xLPS, 1, start=9, end=35)  data_2xLPS_minmaxtransformed <- transform_minmax(data_2xLPS, start=9, end=35) data_2xLPS_scaled <- transform_scale(data_2xLPS, start=9, end=35)  # get sample size of data based on factors of interest samplesize(data_2xLPS, MouseID, Antibody) #> # A tibble: 18 × 3 #> # Groups:   MouseID [6] #>    MouseID Antibody   num #>    <chr>   <chr>    <int> #>  1 1       Cx3cr1    1703 #>  2 1       Iba1      1737 #>  3 1       P2ry12    2105 #>  4 2       Cx3cr1    2496 #>  5 2       Iba1      2927 #>  6 2       P2ry12    4341 #>  7 3       Cx3cr1    1145 #>  8 3       Iba1      1310 #>  9 3       P2ry12    1978 #> 10 4       Cx3cr1    1775 #> 11 4       Iba1      2044 #> 12 4       P2ry12    2372 #> 13 5       Cx3cr1    2053 #> 14 5       Iba1      2302 #> 15 5       P2ry12    3513 #> 16 6       Cx3cr1    2771 #> 17 6       Iba1      3095 #> 18 6       P2ry12    3665 samplesize(data_2xLPS, Sex, Treatment, Antibody) #> # A tibble: 12 × 4 #> # Groups:   Sex, Treatment [4] #>    Sex   Treatment Antibody   num #>    <chr> <chr>     <chr>    <int> #>  1 F     2xLPS     Cx3cr1    3478 #>  2 F     2xLPS     Iba1      3781 #>  3 F     2xLPS     P2ry12    4477 #>  4 F     PBS       Cx3cr1    3641 #>  5 F     PBS       Iba1      4237 #>  6 F     PBS       P2ry12    6319 #>  7 M     2xLPS     Cx3cr1    2771 #>  8 M     2xLPS     Iba1      3095 #>  9 M     2xLPS     P2ry12    3665 #> 10 M     PBS       Cx3cr1    2053 #> 11 M     PBS       Iba1      2302 #> 12 M     PBS       P2ry12    3513"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/articles/MicrogliaMorphologyR.html","id":"obtain-density-measures-for-each-image-using-areas-csv-file-output-from-microgliamorphology","dir":"Articles","previous_headings":"Load in MicrogliaMorphology ImageJ macro output and explore data","what":"Obtain density measures for each image (using Areas.csv file output from MicrogliaMorphology)","title":"How to use MicrogliaMorphologyR","text":"Note: areas obtained file dataset-specific units original input images","code":"# list out all variables of interest present in the original image names to obtain numbers of microglia per image microglianumbers <- samplesize(data_2xLPS, Antibody, MouseID, Sex, Treatment, BrainRegion, Subregion)  microglianumbers %>% print(n=3, width=Inf) #> # A tibble: 148 × 7 #> # Groups:   Antibody, MouseID, Sex, Treatment, BrainRegion [51] #>   Antibody MouseID Sex   Treatment BrainRegion Subregion   num #>   <chr>    <chr>   <chr> <chr>     <chr>       <chr>     <int> #> 1 Cx3cr1   1       F     2xLPS     FC          ACC          93 #> 2 Cx3cr1   1       F     2xLPS     FC          IL          161 #> 3 Cx3cr1   1       F     2xLPS     FC          PL          112 #> # ℹ 145 more rows  # add Name column back in -- make sure that the resulting strings in the Name column match the names of your original input .tiff files that you used for MicrogliaMorphology !! microglianumbers <- microglianumbers %>% unite(\"Name\", Antibody:Subregion, sep=\"_\", remove=FALSE)  microglianumbers %>% print(n=3, width=Inf) #> # A tibble: 148 × 8 #> # Groups:   Antibody, MouseID, Sex, Treatment, BrainRegion [51] #>   Name                    Antibody MouseID Sex   Treatment BrainRegion Subregion #>   <chr>                   <chr>    <chr>   <chr> <chr>     <chr>       <chr>     #> 1 Cx3cr1_1_F_2xLPS_FC_ACC Cx3cr1   1       F     2xLPS     FC          ACC       #> 2 Cx3cr1_1_F_2xLPS_FC_IL  Cx3cr1   1       F     2xLPS     FC          IL        #> 3 Cx3cr1_1_F_2xLPS_FC_PL  Cx3cr1   1       F     2xLPS     FC          PL        #>     num #>   <int> #> 1    93 #> 2   161 #> 3   112 #> # ℹ 145 more rows  # path to Areas.csv file AreasPath <- \"./man/data/Areas.csv\"   # use celldensity function to calculate density at image-level: values are under the \"Density\" column Density <- celldensity(AreasPath, microglianumbers) Density %>% print(n=5, width=Inf) #> # A tibble: 148 × 10 #> # Groups:   Antibody, MouseID, Sex, Treatment, BrainRegion [51] #>   Name                    Antibody MouseID Sex   Treatment BrainRegion Subregion #>   <chr>                   <chr>    <chr>   <chr> <chr>     <chr>       <chr>     #> 1 Cx3cr1_1_F_2xLPS_FC_ACC Cx3cr1   1       F     2xLPS     FC          ACC       #> 2 Cx3cr1_1_F_2xLPS_FC_IL  Cx3cr1   1       F     2xLPS     FC          IL        #> 3 Cx3cr1_1_F_2xLPS_FC_PL  Cx3cr1   1       F     2xLPS     FC          PL        #> 4 Cx3cr1_1_F_2xLPS_HC_CA1 Cx3cr1   1       F     2xLPS     HC          CA1       #> 5 Cx3cr1_1_F_2xLPS_HC_CA2 Cx3cr1   1       F     2xLPS     HC          CA2       #>     num     Area  Density #>   <int>    <dbl>    <dbl> #> 1    93  333722. 0.000279 #> 2   161  589983. 0.000273 #> 3   112  423038. 0.000265 #> 4   263 1018060. 0.000258 #> 5    43  172581. 0.000249 #> # ℹ 143 more rows"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/articles/MicrogliaMorphologyR.html","id":"if-you-want-to-group-on-another-variable-and-then-recalculate-calculate-density","dir":"Articles","previous_headings":"Load in MicrogliaMorphology ImageJ macro output and explore data > Obtain density measures for each image (using Areas.csv file output from MicrogliaMorphology)","what":"if you want to group on another variable, and then recalculate calculate density","title":"How to use MicrogliaMorphologyR","text":"e.g., calculating density brain region-level rather subregion level (image rois capture example dataset) Now, since gotten better feel data transform , can proceed PCA dimensionality reduction downstream clustering. can see first 3 PCs describe around ~85% data. can also explore PC correlates 27 different morphology features get better understanding PC describes variability present data. useful inform include downstream clustering steps.","code":"Density %>%    group_by(Antibody, MouseID, Sex, Treatment, BrainRegion) %>%   summarise(num=sum(num), Area=sum(Area)) %>% # calculate new cell numbers and new areas at the brain region level   mutate(Density=num/Area) # calculate new density at the brain region level #> `summarise()` has grouped output by 'Antibody', 'MouseID', 'Sex', 'Treatment'. #> You can override using the `.groups` argument. #> # A tibble: 51 × 8 #> # Groups:   Antibody, MouseID, Sex, Treatment [18] #>    Antibody MouseID Sex   Treatment BrainRegion   num     Area  Density #>    <chr>    <chr>   <chr> <chr>     <chr>       <int>    <dbl>    <dbl> #>  1 Cx3cr1   1       F     2xLPS     FC            366 1346743. 0.000272 #>  2 Cx3cr1   1       F     2xLPS     HC            723 2705033. 0.000267 #>  3 Cx3cr1   1       F     2xLPS     STR           614 2229707. 0.000275 #>  4 Cx3cr1   2       F     PBS       FC            523 1758434. 0.000297 #>  5 Cx3cr1   2       F     PBS       HC            667 2448885. 0.000272 #>  6 Cx3cr1   2       F     PBS       STR          1306 4608609. 0.000283 #>  7 Cx3cr1   3       F     PBS       FC            412 1496417. 0.000275 #>  8 Cx3cr1   3       F     PBS       STR           733 2624917. 0.000279 #>  9 Cx3cr1   4       F     2xLPS     FC            375 1762321. 0.000213 #> 10 Cx3cr1   4       F     2xLPS     HC            503 2154789. 0.000233 #> # ℹ 41 more rows"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/articles/MicrogliaMorphologyR.html","id":"dimensionality-reduction-using-pca","dir":"Articles","previous_headings":"","what":"Dimensionality reduction using PCA","title":"How to use MicrogliaMorphologyR","text":"","code":"pcadata_elbow(data_2xLPS_logtransformed, featurestart=9, featureend=35) pca_data <- pcadata(data_2xLPS_logtransformed, featurestart=9, featureend=35,                     pc.start=1, pc.end=10) head(pca_data,3) #>           PC1       PC2        PC3        PC4         PC5         PC6 #> 1 -3.40837468 0.6764322  2.4544974 -0.7011076  0.51923399  0.09841964 #> 2 -3.97236479 0.6876435 -0.1588262 -1.7816133 -0.29998161 -0.39435933 #> 3 -0.05205818 0.4984643  1.1106371 -1.7095791  0.05149981 -0.88502415 #>          PC7        PC8        PC9       PC10 Antibody MouseID Sex Treatment #> 1 -0.1887577 -0.2217257 -1.4166585  0.7370713   Cx3cr1       1   F     2xLPS #> 2 -0.4914042 -0.5946128  0.1761947 -0.2787745   Cx3cr1       1   F     2xLPS #> 3 -0.1504321 -0.1952254 -0.6739042  0.3673300   Cx3cr1       1   F     2xLPS #>   BrainRegion Subregion          ID #> 1          FC       ACC 00002-01053 #> 2          FC       ACC 00009-01153 #> 3          FC       ACC 00015-01224 #>                                          UniqueID Foreground pixels #> 1 Cx3cr1_Paper1_2Hit_1_F_2xLPS_FC_ACC_00002-01053          7.838343 #> 2 Cx3cr1_Paper1_2Hit_1_F_2xLPS_FC_ACC_00009-01153          7.837554 #> 3 Cx3cr1_Paper1_2Hit_1_F_2xLPS_FC_ACC_00015-01224          8.516593 #>   Density of foreground pixels in hull area #> 1                                 0.4722511 #> 2                                 0.5270926 #> 3                                 0.5027128 #>   Span ratio of hull (major/minor axis) Maximum span across hull     Area #> 1                             0.8187220                 4.516565 8.343078 #> 2                             0.9121221                 4.512384 8.202756 #> 3                             0.8887962                 4.867296 8.942330 #>   Perimeter Circularity Width of bounding rectangle #> 1  5.579191   0.5642337                    4.406719 #> 2  5.458799   0.6092219                    4.219508 #> 3  5.863106   0.5771189                    4.682131 #>   Height of bounding rectangle Maximum radius from hull's center of mass #> 1                     4.488636                                  3.945005 #> 2                     4.532599                                  3.927930 #> 3                     4.779123                                  4.213828 #>   Max/min radii from hull's center of mass #> 1                                 1.017764 #> 2                                 1.085460 #> 3                                 1.044754 #>   Relative variation (CV) in radii from hull's center of mass Mean radius #> 1                                                   0.1031882    3.833051 #> 2                                                   0.1719345    3.666266 #> 3                                                   0.1264564    4.100085 #>   Diameter of bounding circle Maximum radius from circle's center of mass #> 1                    4.600622                                    3.917470 #> 2                    4.512384                                    3.830149 #> 3                    4.884708                                    4.199093 #>   Max/min radii from circle's center of mass #> 1                                  0.9896899 #> 2                                  0.9603076 #> 3                                  0.9981288 #>   Relative variation (CV) in radii from circle's center of mass #> 1                                                     0.1008403 #> 2                                                     0.1573456 #> 3                                                     0.1276013 #>   Mean radius from circle's center of mass # of branches # of junctions #> 1                                 3.828354      2.564949       1.945910 #> 2                                 3.649437      2.708050       1.945910 #> 3                                 4.100996      3.135494       2.484907 #>   # of end point voxels # of junction voxels # of slab voxels #> 1              1.945910             2.564949         5.484797 #> 2              2.302585             2.708050         5.342334 #> 3              2.397895             3.135494         5.846439 #>   Average branch length # of triple points # of quadruple points #> 1              2.275111           1.945910             0.0000000 #> 2              2.044073           1.791759             0.6931472 #> 3              2.100836           2.397895             0.6931472 #>   Maximum branch length #> 1              3.409033 #> 2              2.778384 #> 3              3.102836"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/articles/MicrogliaMorphologyR.html","id":"generate-heatmap-of-correlations-between-pcs-and-features","dir":"Articles","previous_headings":"Dimensionality reduction using PCA","what":"Generate heatmap of correlations between PCs and features","title":"How to use MicrogliaMorphologyR","text":"Using pcfeaturecorrelations function, can investigate relationships 27 individual morphology measures principle components examine PC differentially correlated described different sets morphology features. example, can see PC1 highly positively correlated features describing branching complexity territory span, meaning individual cells greater branching complexity area higher PC1 scores dataset. Similarly, variability dataset represented PC2 described cell shape: 1) circularity (circularity, max/min radii center, span ratio hull) 2) branching homogeneity (relative variation (CV) center mass), PC3 described branch length-related measures. Generally, see types features describing first four PCs dimensionality reduction, although directionality correlations inversed, normal long sets features highly correlated (e.g., circularity branching homogeneity PC2) still maintained.","code":"pcfeaturecorrelations(pca_data, pc.start=1, pc.end=3,                        feature.start=19, feature.end=45,                        rthresh=0.75, pthresh=0.05,                        title=\"Correlation between PCs and features\") # to get the underlying stats depicted in the heatmap above correlationstats <- pcfeaturecorrelations_stats(pca_data, pc.start=1, pc.end=3,                                                 feature.start=19, feature.end=45,                                                 rthresh=0.75, pthresh=0.05) correlationstats %>% head() #>               measure_a measure_b correlation pvalues Significant #> 1         # of branches       PC1   0.9202371       0 significant #> 2         # of branches       PC2   0.1922737       0          ns #> 3         # of branches       PC3  -0.2115683       0          ns #> 4 # of end point voxels       PC1   0.9063301       0 significant #> 5 # of end point voxels       PC2   0.1644570       0          ns #> 6 # of end point voxels       PC3  -0.1465995       0          ns"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/articles/MicrogliaMorphologyR.html","id":"visually-explore-different-sources-of-variability-in-dataset","dir":"Articles","previous_headings":"Dimensionality reduction using PCA","what":"Visually explore different sources of variability in dataset","title":"How to use MicrogliaMorphologyR","text":"","code":"# gather your data by experimental variables (e.g., Treatment, Sex, MouseID, etc.) gathered_expvariables <- pca_data %>% gather(variable, value, 11:16)   plots_expvariable(gathered_expvariables, \"PC1\", \"PC2\")"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/articles/MicrogliaMorphologyR.html","id":"k-means-clustering-on-pcs","dir":"Articles","previous_headings":"","what":"K-means clustering on PCs","title":"How to use MicrogliaMorphologyR","text":"performing dimensionality reduction, can use PCs input downstream clustering methods. tutorial, cluster cells morphological classes using k-means clustering, partitions data points within given dataset defined numbers clusters based proximity nearest cluster’s centroid. provide example end Github depict use case fuzzy k-means clustering, soft clustering approach another option allows extended analyses characterization ‘’ ameboid, hypertrophic, rod-like, ramified cells characterization cells ambiguous identities lie morphological states - see ‘Fuzzy K-means clustering’ section end Github details method. toolset highly flexible, can also integrated clustering approaches hierarchical clustering gaussian mixture models. running kmeans clustering, number clusters (K) specify create, algorithm randomly select K initial cluster centers. data point’s euclidean distance calculated initial centers assigned belonging cluster closest . centroids clusters updated calculating new means points assigned cluster. process randomly setting initial centers, assigning data points clusters, updating cluster centroids iterated maximum number iterations reached. Thus, 2 main dataset-specific parameters specify troubleshoot dataset : iter.max, maximum number iterations allowed, number times kmeans algorithm run results returned. iter.max 10-20 recommended nstart, many random sets chosen. nstart atleast 25 initial configurations recommended. can read kmeans clustering optimizing parameters following links: K-means Cluster Analysis K Means parameters results (R Studio) explained","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/articles/MicrogliaMorphologyR.html","id":"prepare-data-for-clustering","dir":"Articles","previous_headings":"K-means clustering on PCs","what":"Prepare data for clustering","title":"How to use MicrogliaMorphologyR","text":"","code":"## for k-means clustering: scale PCs 1-3, which together describe ~85% of variability pca_data_scale <- transform_scale(pca_data, start=1, end=3) # scale pca data as input for k-means clustering kmeans_input <- pca_data_scale[1:3]"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/articles/MicrogliaMorphologyR.html","id":"cluster-optimization-prior-to-running-fuzzy-k-means","dir":"Articles","previous_headings":"K-means clustering on PCs","what":"Cluster optimization prior to running fuzzy k-means","title":"How to use MicrogliaMorphologyR","text":"using wss silhouette methods check optimal numbers clusters dataset, appears data optimally clustered using k=4. many cluster optimization methods can try explore data. Next, proceed actual clustering. can cluster using fuzzy k-means regular k-means step. clustering, use built-functions within MicrogliaMorphologyR assess parameter k=4 influences clusters defined morphology features (make sense according know microglia morphology). step may require troubleshooting updating clustering parameters, may need run k-means function multiple times. planning use fuzzy k-means, keep mind soft clustering approach time-intensive computationally expensive also calculates membership scores cluster every single cell. might help use regular k-means first pass, verify clusters make sense using functions follow, run fuzzy k-means function using final parameters determine generate final dataset downstream analysis. analysis proceeding, working regular k-means clustering output. provide example use case fuzzy k-means clustering description approach end Github interested.","code":"# check for optimal number of clusters using wss and silhouette methods sampling <- kmeans_input[sample(nrow(kmeans_input), 5000),] #sample 5000 random rows for cluster optimization  fviz_nbclust(sampling, kmeans, method = 'wss', nstart=25, iter.max=50) # 4 clusters fviz_nbclust(sampling, kmeans, method = 'silhouette', nstart=25, iter.max=50) # 4 clusters"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/articles/MicrogliaMorphologyR.html","id":"fuzzy-k-means-soft-clustering","dir":"Articles","previous_headings":"K-means clustering on PCs","what":"Fuzzy k-means (soft clustering)","title":"How to use MicrogliaMorphologyR","text":"","code":"# cluster and combine with original data data_kmeans <- fcm(kmeans_input, centers=4, nstart=25) pca_kmeans <- cbind(pca_data[1:5], data_kmeans)"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/articles/MicrogliaMorphologyR.html","id":"regular-k-means-hard-clustering","dir":"Articles","previous_headings":"K-means clustering on PCs","what":"Regular k-means (hard clustering)","title":"How to use MicrogliaMorphologyR","text":"","code":"# cluster and combine with original data data_kmeans <- kmeans(kmeans_input, centers=4)  # Here, we are creating a new data frame that contains the first 2 PCs and original dataset, then renaming the data_kmeans$cluster column to simply say \"Cluster\". You can bind together as many of the PCs as you want. Binding the original, untransformed data is useful if you want to plot the raw values of any individual morphology measures downstream.  pca_kmeans <- cbind(pca_data[1:2], data_2xLPS, as.data.frame(data_kmeans$cluster)) %>%   rename(Cluster=`data_kmeans$cluster`)  head(pca_kmeans,3) #>           PC1       PC2 Antibody MouseID Sex Treatment BrainRegion Subregion #> 1 -3.40837468 0.6764322   Cx3cr1       1   F     2xLPS          FC       ACC #> 2 -3.97236479 0.6876435   Cx3cr1       1   F     2xLPS          FC       ACC #> 3 -0.05205818 0.4984643   Cx3cr1       1   F     2xLPS          FC       ACC #>            ID                                        UniqueID Foreground pixels #> 1 00002-01053 Cx3cr1_Paper1_2Hit_1_F_2xLPS_FC_ACC_00002-01053              2535 #> 2 00009-01153 Cx3cr1_Paper1_2Hit_1_F_2xLPS_FC_ACC_00009-01153              2533 #> 3 00015-01224 Cx3cr1_Paper1_2Hit_1_F_2xLPS_FC_ACC_00015-01224              4996 #>   Density of foreground pixels in hull area #> 1                                    0.6036 #> 2                                    0.6940 #> 3                                    0.6532 #>   Span ratio of hull (major/minor axis) Maximum span across hull Area Perimeter #> 1                                1.2676                  90.5207 4200  263.8573 #> 2                                1.4896                  90.1388 3650  233.8153 #> 3                                1.4322                 128.9690 7648  350.8153 #>   Circularity Width of bounding rectangle Height of bounding rectangle #> 1      0.7581                          81                           88 #> 2      0.8390                          67                           92 #> 3      0.7809                         107                          118 #>   Maximum radius from hull's center of mass #> 1                                   50.6766 #> 2                                   49.8017 #> 3                                   66.6149 #>   Max/min radii from hull's center of mass #> 1                                   1.7670 #> 2                                   1.9608 #> 3                                   1.8427 #>   Relative variation (CV) in radii from hull's center of mass Mean radius #> 1                                                      0.1087     45.2033 #> 2                                                      0.1876     38.1056 #> 3                                                      0.1348     59.3454 #>   Diameter of bounding circle Maximum radius from circle's center of mass #> 1                     98.5462                                     49.2731 #> 2                     90.1388                                     45.0694 #> 3                    131.2519                                     65.6259 #>   Max/min radii from circle's center of mass #> 1                                     1.6904 #> 2                                     1.6125 #> 3                                     1.7132 #>   Relative variation (CV) in radii from circle's center of mass #> 1                                                        0.1061 #> 2                                                        0.1704 #> 3                                                        0.1361 #>   Mean radius from circle's center of mass # of branches # of junctions #> 1                                  44.9868            12              6 #> 2                                  37.4530            14              6 #> 3                                  59.4004            22             11 #>   # of end point voxels # of junction voxels # of slab voxels #> 1                     6                   12              240 #> 2                     9                   14              208 #> 3                    10                   22              345 #>   Average branch length # of triple points # of quadruple points #> 1                 8.729                  6                     0 #> 2                 6.722                  5                     1 #> 3                 7.173                 10                     1 #>   Maximum branch length Cluster #> 1                29.236       4 #> 2                15.093       2 #> 3                21.261       3"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/articles/MicrogliaMorphologyR.html","id":"plot-k-means-clusters-in-pc-space","dir":"Articles","previous_headings":"K-means clustering on PCs","what":"Plot k-means clusters in PC space","title":"How to use MicrogliaMorphologyR","text":"","code":"plot <- clusterplots(pca_kmeans, \"PC1\", \"PC2\") plot plot + scale_colour_viridis_d() # customizeable example: add color scheme of choice"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/articles/MicrogliaMorphologyR.html","id":"cluster-specific-measures-on-average-for-each-morphology-feature-relative-to-other-clusters","dir":"Articles","previous_headings":"K-means clustering on PCs","what":"Cluster-specific measures on average for each morphology feature, relative to other clusters","title":"How to use MicrogliaMorphologyR","text":"comparing individual features across clusters, can characterize clusters follows: Cluster 1 = rod-like (greatest oblongness, lowest circularity) Cluster 2 = ameboid (lowest territory span, high circularity, smallest branch lengths) Cluster 3 = ramified (largest territory span branching complexity) Cluster 4 = hypertrophic (average territory span, high branch thickness explained pixel density hull)","code":"clusterfeatures(pca_kmeans, featurestart=11, featureend=37)"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/articles/MicrogliaMorphologyR.html","id":"colorbycluster","dir":"Articles","previous_headings":"K-means clustering on PCs","what":"ColorByCluster","title":"How to use MicrogliaMorphologyR","text":"Using cluster classes assigned analyses using MicrogliaMorphologyR, can color cell original image cluster using MicrogliaMorphology ImageJ macro. following example, isolating Cluster assignments microglia Cx3cr1-stained ACC subregion image Mouse 1. can images interested applying ColorByCluster . offers additional method visually assess verify suspected cluster identities deeming ramifed, hyper-ramified, rod-like, ameboid, morphological form downstream analysis interpretation. Make sure filter cells belonging image want run ColorByCluster .","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/articles/MicrogliaMorphologyR.html","id":"formatting-data-for-colorbycluster-input-color-coding-in-imagej","dir":"Articles","previous_headings":"K-means clustering on PCs > ColorByCluster","what":"Formatting data for ColorByCluster input (Color coding in ImageJ)","title":"How to use MicrogliaMorphologyR","text":"","code":"# isolate out all the cells for your specific image of interest colorbycluster <- pca_kmeans %>%    filter(Antibody==\"Cx3cr1\",MouseID==\"1\", BrainRegion==\"FC\", Subregion==\"ACC\") %>% select(c(Cluster, ID)) head(colorbycluster) #>   Cluster          ID #> 1       4 00002-01053 #> 2       2 00009-01153 #> 3       3 00015-01224 #> 4       4 00016-01229 #> 5       4 00039-01394 #> 6       4 00044-01397"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/articles/MicrogliaMorphologyR.html","id":"save--csv-file-to-feed-into-colorbycluster-function-in-microgliamorphology-imagej-macro","dir":"Articles","previous_headings":"K-means clustering on PCs > ColorByCluster","what":"Save .csv file to feed into ColorByCluster function in MicrogliaMorphology ImageJ macro","title":"How to use MicrogliaMorphologyR","text":"","code":"write.csv(colorbycluster, \"filepath/Cxc3cr_Mouse1_FC_ACC_data.csv\")"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/articles/MicrogliaMorphologyR.html","id":"cluster-characterization","dir":"Articles","previous_headings":"K-means clustering on PCs","what":"Cluster characterization","title":"How to use MicrogliaMorphologyR","text":"","code":"# calculate cluster percentages across variables of interest cp <- clusterpercentage(pca_kmeans, \"Cluster\", MouseID, Antibody, Treatment, Sex, BrainRegion) cp$Treatment <- factor(cp$Treatment, levels=c(\"PBS\",\"2xLPS\"))  # update cluster labels cp <- cp %>% mutate(Cluster =                        case_when(Cluster==\"1\" ~ \"Rod-like\",                                 Cluster==\"2\" ~ \"Ameboid\",                                 Cluster==\"3\" ~ \"Ramified\",                                 Cluster==\"4\" ~ \"Hypertrophic\"))  # Quick check of cluster proportions when considering experimental variables of interest cp %>%    filter(BrainRegion==\"STR\") %>% # in this example, we filter for our brain region of interest   clusterpercentage_boxplots(Antibody, Treatment) # grouping variables # example graph of data given variables of interest cp %>%    filter(Antibody==\"Iba1\") %>%   ggplot(aes(x=Cluster, y=percentage, group=interaction(Cluster, Treatment))) +   facet_wrap(~BrainRegion) +   geom_boxplot(aes(group=interaction(Cluster, Treatment), fill=Treatment)) +   scale_fill_manual(values=c(\"#fde725\",\"#482878\")) +   geom_point(position=position_dodge(width=0.8), size=0.75, aes(group=interaction(Cluster,Treatment), color=Sex)) +   ggtitle(\"2xLPS mouse dataset: K-means clusters\") +   labs(fill=\"Treatment\") +   theme_bw(base_size=14) +   theme(axis.text.x=element_text(angle=45, vjust=1, hjust=1))"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/articles/MicrogliaMorphologyR.html","id":"statistical-analysis","dir":"Articles","previous_headings":"","what":"Statistical analysis","title":"How to use MicrogliaMorphologyR","text":"MicrogliaMorphologyR includes functions run stats cluster percentages well individual morphology measures.","code":""},{"path":[]},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/articles/MicrogliaMorphologyR.html","id":"e-g--across-clusters---how-does-cluster-membership-change-with-lps","dir":"Articles","previous_headings":"Statistical analysis > Cluster percentage changes at animal level, in response to experimental variables","what":"e.g., Across clusters - How does cluster membership change with LPS?","title":"How to use MicrogliaMorphologyR","text":"stats_cluster.animal function fits generalized linear mixed model dataset beta distribution, suitable values like percentages probabilities constrained range 0-1, using glmmTMB package. Part output includes check model fit using DHARMa package, “uses simulation-based approach create readily interpretable scaled (quantile) residuals fitted (generalized) linear mixed models.” function creates two DHARMa plots, contained output[[4]]. can read interpret model fit using DHARMa reading package vignette. example, fitting generalized linear mixed model Iba1-stained dataset model percentage cluster membership factor Cluster identity, Treatment, BrainRegion interactions MouseID repeated measure since outcome variable (cluster percentages) represented multiple times per animal. first posthoc correction, correcting multiple tests treatments (PBS vs. 2xLPS) across Clusters BrainRegions using Bonferroni method - since 4 clusters 3 brain regions, correcting across 12 tests. second posthoc correction, correcting multiple tests treatments (PBS vs. 2xLPS) across Clusters using Bonferroni method - since 4 clusters, correcting across 4 tests.","code":"# prepare percentages dataset for downstream analysis stats.input <- cp stats.input$MouseID <- factor(stats.input$MouseID) stats.input$Cluster <- factor(stats.input$Cluster) stats.input$Treatment <- factor(stats.input$Treatment)  # run stats analysis for changes in cluster percentages, at the animal level # you can specify up to two posthoc comparisons (posthoc1 and posthoc2 arguments) - if you only have one set of posthocs to run, specify the same comparison twice for both arguments. you will just get the same results in output[[2]] and output[[3]]. stats.testing <- stats_cluster.animal(data = stats.input %>% filter(Antibody==\"Iba1\"),                                        model = \"percentage ~ Cluster*Treatment*BrainRegion + (1|MouseID)\",                                        posthoc1 = \"~Treatment|Cluster|BrainRegion\",                                        posthoc2 = \"~Treatment|Cluster\", adjust = \"bonferroni\") #> NOTE: Results may be misleading due to involvement in interactions #> Formula:           #> percentage ~ Cluster * Treatment * BrainRegion + (1 | MouseID) #> Data: data #>       AIC       BIC    logLik  df.resid  #> -264.2217 -206.5145  158.1109        42  #> Random-effects (co)variances: #>  #> Conditional model: #>  Groups  Name        Std.Dev. #>  MouseID (Intercept) 2.66e-06 #>  #> Number of obs: 68 / Conditional model: MouseID, 6 #>  #> Dispersion parameter for beta family ():  296  #>  #> Fixed Effects: #>  #> Conditional model: #>                      (Intercept)                          Cluster1   #>                        -1.190535                         -0.280517   #>                         Cluster2                          Cluster3   #>                        -0.530336                          0.729137   #>                       Treatment1                      BrainRegion1   #>                        -0.034300                         -0.001085   #>                     BrainRegion2               Cluster1:Treatment1   #>                         0.032280                          0.258393   #>              Cluster2:Treatment1               Cluster3:Treatment1   #>                        -0.571027                          0.123271   #>            Cluster1:BrainRegion1             Cluster2:BrainRegion1   #>                         0.038133                         -0.026514   #>            Cluster3:BrainRegion1             Cluster1:BrainRegion2   #>                        -0.093337                         -0.070106   #>            Cluster2:BrainRegion2             Cluster3:BrainRegion2   #>                         0.327990                         -0.213648   #>          Treatment1:BrainRegion1           Treatment1:BrainRegion2   #>                        -0.026359                          0.016676   #> Cluster1:Treatment1:BrainRegion1  Cluster2:Treatment1:BrainRegion1   #>                         0.040356                         -0.105077   #> Cluster3:Treatment1:BrainRegion1  Cluster1:Treatment1:BrainRegion2   #>                         0.146770                         -0.041974   #> Cluster2:Treatment1:BrainRegion2  Cluster3:Treatment1:BrainRegion2   #>                        -0.074843                          0.057942  stats.testing[[1]] # anova #> Analysis of Deviance Table (Type II Wald chisquare tests) #>  #> Response: percentage #>                                  Chisq Df Pr(>Chisq)     #> Cluster                       632.4490  3  < 2.2e-16 *** #> Treatment                       1.2604  1     0.2616     #> BrainRegion                     0.2084  2     0.9010     #> Cluster:Treatment             271.0010  3  < 2.2e-16 *** #> Cluster:BrainRegion           120.9206  6  < 2.2e-16 *** #> Treatment:BrainRegion           2.0685  2     0.3555     #> Cluster:Treatment:BrainRegion  38.4144  6  9.321e-07 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 stats.testing[[2]] # posthoc 1 #>  contrast    Cluster      BrainRegion   estimate         SE  df z.ratio p.value #>  PBS - 2xLPS Ameboid      FC           0.4761807 0.12097420 Inf   3.936  0.0010 #>  PBS - 2xLPS Hypertrophic FC          -1.4735259 0.14575411 Inf -10.110  <.0001 #>  PBS - 2xLPS Ramified     FC           0.4187653 0.09890622 Inf   4.234  0.0003 #>  PBS - 2xLPS Rod-like     FC           0.0933095 0.10739882 Inf   0.869  1.0000 #>  PBS - 2xLPS Ameboid      HC           0.3975891 0.13631860 Inf   2.917  0.0425 #>  PBS - 2xLPS Hypertrophic HC          -1.3269892 0.14559100 Inf  -9.114  <.0001 #>  PBS - 2xLPS Ramified     HC           0.3271791 0.11116899 Inf   2.943  0.0390 #>  PBS - 2xLPS Rod-like     HC           0.4612293 0.12234620 Inf   3.770  0.0020 #>  PBS - 2xLPS Ameboid      STR          0.4707880 0.12231265 Inf   3.849  0.0014 #>  PBS - 2xLPS Hypertrophic STR         -0.8314493 0.15327901 Inf  -5.424  <.0001 #>  PBS - 2xLPS Ramified     STR         -0.2121166 0.09521815 Inf  -2.228  0.3108 #>  PBS - 2xLPS Rod-like     STR          0.3758423 0.11203994 Inf   3.355  0.0095 #>  Significant #>  significant #>  significant #>  significant #>  ns          #>  significant #>  significant #>  significant #>  significant #>  significant #>  significant #>  ns          #>  significant #>  #> Results are given on the log odds ratio (not the response) scale.  #> P value adjustment: bonferroni method for 12 tests stats.testing[[3]] # posthoc 2 #>  contrast    Cluster        estimate         SE  df z.ratio p.value Significant #>  PBS - 2xLPS Ameboid       0.4481859 0.07316650 Inf   6.126  <.0001 significant #>  PBS - 2xLPS Hypertrophic -1.2106548 0.08561029 Inf -14.141  <.0001 significant #>  PBS - 2xLPS Ramified      0.1779426 0.05888547 Inf   3.022  0.0100 significant #>  PBS - 2xLPS Rod-like      0.3101270 0.06587576 Inf   4.708  <.0001 significant #>  #> Results are averaged over the levels of: BrainRegion  #> Results are given on the log odds ratio (not the response) scale.  #> P value adjustment: bonferroni method for 4 tests stats.testing[[4]] # DHARMa model check stats.testing[[5]] # summary of model #> Formula:           #> percentage ~ Cluster * Treatment * BrainRegion + (1 | MouseID) #> Data: data #>       AIC       BIC    logLik  df.resid  #> -264.2217 -206.5145  158.1109        42  #> Random-effects (co)variances: #>  #> Conditional model: #>  Groups  Name        Std.Dev. #>  MouseID (Intercept) 2.66e-06 #>  #> Number of obs: 68 / Conditional model: MouseID, 6 #>  #> Dispersion parameter for beta family ():  296  #>  #> Fixed Effects: #>  #> Conditional model: #>                      (Intercept)                          Cluster1   #>                        -1.190535                         -0.280517   #>                         Cluster2                          Cluster3   #>                        -0.530336                          0.729137   #>                       Treatment1                      BrainRegion1   #>                        -0.034300                         -0.001085   #>                     BrainRegion2               Cluster1:Treatment1   #>                         0.032280                          0.258393   #>              Cluster2:Treatment1               Cluster3:Treatment1   #>                        -0.571027                          0.123271   #>            Cluster1:BrainRegion1             Cluster2:BrainRegion1   #>                         0.038133                         -0.026514   #>            Cluster3:BrainRegion1             Cluster1:BrainRegion2   #>                        -0.093337                         -0.070106   #>            Cluster2:BrainRegion2             Cluster3:BrainRegion2   #>                         0.327990                         -0.213648   #>          Treatment1:BrainRegion1           Treatment1:BrainRegion2   #>                        -0.026359                          0.016676   #> Cluster1:Treatment1:BrainRegion1  Cluster2:Treatment1:BrainRegion1   #>                         0.040356                         -0.105077   #> Cluster3:Treatment1:BrainRegion1  Cluster1:Treatment1:BrainRegion2   #>                         0.146770                         -0.041974   #> Cluster2:Treatment1:BrainRegion2  Cluster3:Treatment1:BrainRegion2   #>                        -0.074843                          0.057942"},{"path":[]},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/articles/MicrogliaMorphologyR.html","id":"e-g--how-does-each-individual-morphology-measure-change-with-lps-treatment","dir":"Articles","previous_headings":"Statistical analysis > Individual morphology measures, at the animal level (averaged across cells for each animal)","what":"e.g., How does each individual morphology measure change with LPS treatment?","title":"How to use MicrogliaMorphologyR","text":"stats_morphologymeasures.animal function fits linear model using lm function morphology measure individually within dataset. example, fitting linear model Iba1-stained dataset model values morphology measure factor Treatment BrainRegion interactions. first posthoc correction, correcting multiple comparisons treatments (PBS vs. 2xLPS) across BrainRegions using Bonferroni method - since 3 brain regions, correcting across 3 tests morphology measure. second posthoc correction, correcting multiple comparisons every individual interaction treatment (PBS 2xLPS) brain region (FC, HC, STR) others (e.g., 2xLPS FC vs. PBS STR) correcting across 15 tests morphology measure. second example, testing possible comparisons given experimental variables model, thus considering many tests aren’t biologically relevant useful experiment.  interested running stats 27 morphology measures, can also filter interested (filter ’re interested ) prior running stats_morphologymeasures.animal function. example, filter 4 morphology measures run function 23 measures.  find individual morphology measures violate assumptions normality checking qqplots contained stats.input[[4]], can filter data measures, transform data suitable manner (.e., using MicrogliaMorphologyR functions like transform_minmax transform_scale data transformations), rerun stats morphology features using code .","code":"# prepare data for downstream analysis data <- data_2xLPS %>%    group_by(MouseID, Sex, Treatment, BrainRegion, Antibody) %>%    summarise(across(\"Foreground pixels\":\"Maximum branch length\", ~mean(.x))) %>%    gather(Measure, Value, \"Foreground pixels\":\"Maximum branch length\") #> `summarise()` has grouped output by 'MouseID', 'Sex', 'Treatment', #> 'BrainRegion'. You can override using the `.groups` argument.  # filter out data you want to run stats on and make sure to make any variables included in model into factors stats.input <- data  stats.input$Treatment <- factor(stats.input$Treatment)  # run stats analysis for changes in individual morphology measures # you can specify up to two posthoc comparisons (posthoc1 and posthoc2 arguments) - if you only have one set of posthocs to run, specify the same comparison twice for both arguments. you will just get the same results in output[[2]] and output[[3]]. stats.testing <- stats_morphologymeasures.animal(data = stats.input %>% filter(Antibody==\"Iba1\"),                                                   model = \"Value ~ Treatment*BrainRegion\", type=\"lm\",                                                  posthoc1 = \"~Treatment|BrainRegion\",                                                   posthoc2 = \"~Treatment*BrainRegion\", adjust = \"bonferroni\") #> [1] \"Foreground pixels\" #> [1] \"Density of foreground pixels in hull area\" #> [1] \"Span ratio of hull (major/minor axis)\" #> [1] \"Maximum span across hull\" #> [1] \"Area\" #> [1] \"Perimeter\" #> [1] \"Circularity\" #> [1] \"Width of bounding rectangle\" #> [1] \"Height of bounding rectangle\" #> [1] \"Maximum radius from hull's center of mass\" #> [1] \"Max/min radii from hull's center of mass\" #> [1] \"Relative variation (CV) in radii from hull's center of mass\" #> [1] \"Mean radius\" #> [1] \"Diameter of bounding circle\" #> [1] \"Maximum radius from circle's center of mass\" #> [1] \"Max/min radii from circle's center of mass\" #> [1] \"Relative variation (CV) in radii from circle's center of mass\" #> [1] \"Mean radius from circle's center of mass\" #> [1] \"# of branches\" #> [1] \"# of junctions\" #> [1] \"# of end point voxels\" #> [1] \"# of junction voxels\" #> [1] \"# of slab voxels\" #> [1] \"Average branch length\" #> [1] \"# of triple points\" #> [1] \"# of quadruple points\" #> [1] \"Maximum branch length\"  # anova stats.testing[[1]] %>% head(8) #>                              Sum Sq Df   F value       Pr(>F) #> Treatment              6.875349e+05  1 65.060279 6.040851e-06 #> BrainRegion            6.273589e+04  2  2.968296 9.313579e-02 #> Treatment:BrainRegion  6.182606e+04  2  2.925248 9.578334e-02 #> Residuals              1.162443e+05 11        NA           NA #> Treatment1             2.318244e-02  1 61.707786 7.765694e-06 #> BrainRegion1           5.230256e-03  2  6.961034 1.112878e-02 #> Treatment:BrainRegion1 1.396941e-03  2  1.859211 2.015685e-01 #> Residuals1             4.132491e-03 11        NA           NA #>                                                          measure Significant #> Treatment                                      Foreground pixels significant #> BrainRegion                                    Foreground pixels          ns #> Treatment:BrainRegion                          Foreground pixels          ns #> Residuals                                      Foreground pixels        <NA> #> Treatment1             Density of foreground pixels in hull area significant #> BrainRegion1           Density of foreground pixels in hull area significant #> Treatment:BrainRegion1 Density of foreground pixels in hull area          ns #> Residuals1             Density of foreground pixels in hull area        <NA> # posthoc 1 stats.testing[[2]] %>% head(6) #>      contrast BrainRegion     estimate          SE df  t.ratio      p.value #> 1 2xLPS - PBS          FC 244.19621196 83.93513466 11 2.909344 0.0426170253 #> 2 2xLPS - PBS          HC 464.89704224 93.84233340 11 4.954023 0.0012985925 #> 3 2xLPS - PBS         STR 516.75796274 83.93513466 11 6.156635 0.0002142012 #> 4 2xLPS - PBS          FC   0.07300851  0.01582574 11 4.613277 0.0022456005 #> 5 2xLPS - PBS          HC   0.10040427  0.01769371 11 5.674573 0.0004304675 #> 6 2xLPS - PBS         STR   0.05469185  0.01582574 11 3.455880 0.0161161442 #>                                     measure Significant #> 1                         Foreground pixels significant #> 2                         Foreground pixels significant #> 3                         Foreground pixels significant #> 4 Density of foreground pixels in hull area significant #> 5 Density of foreground pixels in hull area significant #> 6 Density of foreground pixels in hull area significant # posthoc 2 stats.testing[[3]] %>% head(6) #>               contrast   estimate       SE df    t.ratio     p.value #> 1    2xLPS FC - PBS FC  244.19621 83.93513 11  2.9093444 0.213085126 #> 2  2xLPS FC - 2xLPS HC   37.26016 83.93513 11  0.4439162 1.000000000 #> 3    2xLPS FC - PBS HC  502.15721 93.84233 11  5.3510733 0.003501430 #> 4 2xLPS FC - 2xLPS STR  -25.72618 83.93513 11 -0.3065007 1.000000000 #> 5   2xLPS FC - PBS STR  491.03178 83.93513 11  5.8501340 0.001663025 #> 6    PBS FC - 2xLPS HC -206.93605 83.93513 11 -2.4654282 0.470625546 #>             measure Significant #> 1 Foreground pixels          ns #> 2 Foreground pixels          ns #> 3 Foreground pixels significant #> 4 Foreground pixels          ns #> 5 Foreground pixels significant #> 6 Foreground pixels          ns # qqplots to check normality assumptions do.call(\"grid.arrange\", c(stats.testing[[4]], ncol=4)) # shapiro test stats.testing[[5]] %>% head(6) #>           variable statistic   p.value pass #> 1 residuals(model) 0.9541450 0.5252634 pass #> 2 residuals(model) 0.9874225 0.9958905 pass #> 3 residuals(model) 0.9518543 0.4865020 pass #> 4 residuals(model) 0.9481459 0.4278652 pass #> 5 residuals(model) 0.9832680 0.9809502 pass #> 6 residuals(model) 0.9770036 0.9250129 pass #>                                     measure #> 1                         Foreground pixels #> 2 Density of foreground pixels in hull area #> 3     Span ratio of hull (major/minor axis) #> 4                  Maximum span across hull #> 5                                      Area #> 6                                 Perimeter # run stats analysis for changes in individual morphology measures # you can specify up to two posthoc comparisons (posthoc1 and posthoc2 arguments) - if you only have one set of posthocs to run, specify the same comparison twice for both arguments. you will just get the same results in output[[2]] and output[[3]]. stats.testing <- stats_morphologymeasures.animal(data = stats.input %>%                                                     filter(Antibody==\"Iba1\") %>%                                                    filter(!Measure %in% c(\"Foreground pixels\",                                                                           \"Average branch length\",                                                                           \"# of quadruple points\",                                                                           \"Height of bounding rectangle\")),                                                   model = \"Value ~ Treatment*BrainRegion\", type = \"lm\",                                                  posthoc1 = \"~Treatment|BrainRegion\",                                                   posthoc2 = \"~Treatment*BrainRegion\", adjust =\"bonferroni\") #> [1] \"Density of foreground pixels in hull area\" #> [1] \"Span ratio of hull (major/minor axis)\" #> [1] \"Maximum span across hull\" #> [1] \"Area\" #> [1] \"Perimeter\" #> [1] \"Circularity\" #> [1] \"Width of bounding rectangle\" #> [1] \"Maximum radius from hull's center of mass\" #> [1] \"Max/min radii from hull's center of mass\" #> [1] \"Relative variation (CV) in radii from hull's center of mass\" #> [1] \"Mean radius\" #> [1] \"Diameter of bounding circle\" #> [1] \"Maximum radius from circle's center of mass\" #> [1] \"Max/min radii from circle's center of mass\" #> [1] \"Relative variation (CV) in radii from circle's center of mass\" #> [1] \"Mean radius from circle's center of mass\" #> [1] \"# of branches\" #> [1] \"# of junctions\" #> [1] \"# of end point voxels\" #> [1] \"# of junction voxels\" #> [1] \"# of slab voxels\" #> [1] \"# of triple points\" #> [1] \"Maximum branch length\"   # anova stats.testing[[1]] %>% head(8) #>                              Sum Sq Df    F value       Pr(>F) #> Treatment              0.0231824401  1 61.7077864 7.765694e-06 #> BrainRegion            0.0052302556  2  6.9610338 1.112878e-02 #> Treatment:BrainRegion  0.0013969407  2  1.8592115 2.015685e-01 #> Residuals              0.0041324905 11         NA           NA #> Treatment1             0.0008300607  1  0.2688058 6.144032e-01 #> BrainRegion1           0.0437404668  2  7.0824290 1.055091e-02 #> Treatment:BrainRegion1 0.0223637009  2  3.6211164 6.190572e-02 #> Residuals1             0.0339675228 11         NA           NA #>                                                          measure Significant #> Treatment              Density of foreground pixels in hull area significant #> BrainRegion            Density of foreground pixels in hull area significant #> Treatment:BrainRegion  Density of foreground pixels in hull area          ns #> Residuals              Density of foreground pixels in hull area        <NA> #> Treatment1                 Span ratio of hull (major/minor axis)          ns #> BrainRegion1               Span ratio of hull (major/minor axis) significant #> Treatment:BrainRegion1     Span ratio of hull (major/minor axis)          ns #> Residuals1                 Span ratio of hull (major/minor axis)        <NA> # posthoc 1 stats.testing[[2]] %>% head(6) #>      contrast BrainRegion    estimate         SE df    t.ratio      p.value #> 1 2xLPS - PBS          FC  0.07300851 0.01582574 11  4.6132766 0.0022456005 #> 2 2xLPS - PBS          HC  0.10040427 0.01769371 11  5.6745733 0.0004304675 #> 3 2xLPS - PBS         STR  0.05469185 0.01582574 11  3.4558799 0.0161161442 #> 4 2xLPS - PBS          FC  0.09192749 0.04537221 11  2.0260747 0.2031182136 #> 5 2xLPS - PBS          HC  0.03246885 0.05072768 11  0.6400618 1.0000000000 #> 6 2xLPS - PBS         STR -0.07853956 0.04537221 11 -1.7310057 0.3340946601 #>                                     measure Significant #> 1 Density of foreground pixels in hull area significant #> 2 Density of foreground pixels in hull area significant #> 3 Density of foreground pixels in hull area significant #> 4     Span ratio of hull (major/minor axis)          ns #> 5     Span ratio of hull (major/minor axis)          ns #> 6     Span ratio of hull (major/minor axis)          ns # posthoc 2 stats.testing[[3]] %>% head(6) #>               contrast     estimate         SE df   t.ratio      p.value #> 1    2xLPS FC - PBS FC  0.073008506 0.01582574 11  4.613277 0.0112280026 #> 2  2xLPS FC - 2xLPS HC -0.004762487 0.01582574 11 -0.300933 1.0000000000 #> 3    2xLPS FC - PBS HC  0.095641782 0.01769371 11  5.405411 0.0032232825 #> 4 2xLPS FC - 2xLPS STR  0.048370714 0.01582574 11  3.056459 0.1638120520 #> 5   2xLPS FC - PBS STR  0.103062562 0.01582574 11  6.512339 0.0006530396 #> 6    PBS FC - 2xLPS HC -0.077770993 0.01582574 11 -4.914210 0.0069162488 #>                                     measure Significant #> 1 Density of foreground pixels in hull area significant #> 2 Density of foreground pixels in hull area          ns #> 3 Density of foreground pixels in hull area significant #> 4 Density of foreground pixels in hull area          ns #> 5 Density of foreground pixels in hull area significant #> 6 Density of foreground pixels in hull area significant # qqplots to check normality assumptions do.call(\"grid.arrange\", c(stats.testing[[4]], ncol=4)) # shapiro test stats.testing[[5]] %>% head(6) #>           variable statistic    p.value pass #> 1 residuals(model) 0.9874225 0.99589048 pass #> 2 residuals(model) 0.9518543 0.48650203 pass #> 3 residuals(model) 0.9481459 0.42786519 pass #> 4 residuals(model) 0.9832680 0.98095021 pass #> 5 residuals(model) 0.9770036 0.92501287 pass #> 6 residuals(model) 0.9079043 0.09221502 pass #>                                     measure #> 1 Density of foreground pixels in hull area #> 2     Span ratio of hull (major/minor axis) #> 3                  Maximum span across hull #> 4                                      Area #> 5                                 Perimeter #> 6                               Circularity"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/articles/MicrogliaMorphologyR.html","id":"fuzzy-k-means-clustering","dir":"Articles","previous_headings":"","what":"Fuzzy K-means Clustering","title":"How to use MicrogliaMorphologyR","text":"cluster cells morphological classes, can use regular k-means fuzzy k-means clustering. provide example using fuzzy k-means, ‘soft’ clustering method similar concept algorithm k-means clustering, partitions data points within given dataset defined numbers clusters based proximity nearest cluster’s centroid. fuzzy k-means, data points exclusively assigned just one cluster, rather given membership scores clusters. allows additional characterization high-scoring cells within cluster (.e., quintessential ‘rod-like’, ‘ameboid’, ‘hypertrophic’, ‘ramified’ cells), cells ambiguous identities (e.g., cell 5% rod-like, 5% ameboid, 45% hypertrophic, 45% ramified), cases user might interested might informative specific dataset. Fuzzy k-means also assigns final hard cluster assignment based class highest membership score, can used input analysis well. , include example one use case membership scores provided fuzzy k-means.","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/articles/MicrogliaMorphologyR.html","id":"example-of-additional-analyses-possible-with-fuzzy-k-means-soft-clustering-membership-scores","dir":"Articles","previous_headings":"Fuzzy K-means Clustering","what":"Example of additional analyses possible with fuzzy k-means (soft clustering) membership scores","title":"How to use MicrogliaMorphologyR","text":", use fuzzy k-means dataset comes pre-loaded package demonstration purposes, running actual fuzzy clustering step using fcm function ppclust package time-intensive computationally-expensive. Load example dataset:  Example: Characterization just high-scoring cells within cluster (.e., quintessential ‘rod-like’, ‘ameboid’, ‘hypertrophic’, ‘ramified’ cells)","code":"data_fuzzykmeans <- MicrogliaMorphologyR::data_2xLPS_mouse_fuzzykmeans colnames(data_fuzzykmeans) #>  [1] \"Antibody\"                                                      #>  [2] \"MouseID\"                                                       #>  [3] \"Sex\"                                                           #>  [4] \"Treatment\"                                                     #>  [5] \"BrainRegion\"                                                   #>  [6] \"Subregion\"                                                     #>  [7] \"ID\"                                                            #>  [8] \"UniqueID\"                                                      #>  [9] \"Foreground pixels\"                                             #> [10] \"Density of foreground pixels in hull area\"                     #> [11] \"Span ratio of hull (major/minor axis)\"                         #> [12] \"Maximum span across hull\"                                      #> [13] \"Area\"                                                          #> [14] \"Perimeter\"                                                     #> [15] \"Circularity\"                                                   #> [16] \"Width of bounding rectangle\"                                   #> [17] \"Height of bounding rectangle\"                                  #> [18] \"Maximum radius from hull's center of mass\"                     #> [19] \"Max/min radii from hull's center of mass\"                      #> [20] \"Relative variation (CV) in radii from hull's center of mass\"   #> [21] \"Mean radius\"                                                   #> [22] \"Diameter of bounding circle\"                                   #> [23] \"Maximum radius from circle's center of mass\"                   #> [24] \"Max/min radii from circle's center of mass\"                    #> [25] \"Relative variation (CV) in radii from circle's center of mass\" #> [26] \"Mean radius from circle's center of mass\"                      #> [27] \"# of branches\"                                                 #> [28] \"# of junctions\"                                                #> [29] \"# of end point voxels\"                                         #> [30] \"# of junction voxels\"                                          #> [31] \"# of slab voxels\"                                              #> [32] \"Average branch length\"                                         #> [33] \"# of triple points\"                                            #> [34] \"# of quadruple points\"                                         #> [35] \"Maximum branch length\"                                         #> [36] \"PC1\"                                                           #> [37] \"PC2\"                                                           #> [38] \"PC3\"                                                           #> [39] \"Cluster 1\"                                                     #> [40] \"Cluster 2\"                                                     #> [41] \"Cluster 3\"                                                     #> [42] \"Cluster 4\"                                                     #> [43] \"Cluster\"  # check cluster features to determine cluster labels clusterfeatures(data_fuzzykmeans, featurestart=9, featureend=35) # update cluster labels data_fuzzykmeans <- data_fuzzykmeans %>% mutate(Cluster =                        case_when(Cluster==\"1\" ~ \"Ameboid\",                                 Cluster==\"2\" ~ \"Rod-like\",                                 Cluster==\"3\" ~ \"Hypertrophic\",                                 Cluster==\"4\" ~ \"Ramified\")) nrow(data_fuzzykmeans) # number of cells prior to filtering #> [1] 43332  # filter for high-scoring cells, defined as >70% membership score in one of the clusters data <- data_fuzzykmeans %>%    filter(`Cluster 1` > 0.70|          `Cluster 2` > 0.70|          `Cluster 3` > 0.70|          `Cluster 4` > 0.70)  nrow(data) # number of cells after filtering for just the high-scoring cells #> [1] 7525  # calculate cluster percentages across variables of interest cp <- clusterpercentage(data, \"Cluster\", MouseID, Antibody, Treatment, Sex, BrainRegion) cp$Treatment <- factor(cp$Treatment, levels=c(\"PBS\",\"2xLPS\"))  # example graph of data given variables of interest cp %>%    filter(Antibody==\"Iba1\") %>%   ggplot(aes(x=Cluster, y=percentage, group=interaction(Cluster, Treatment))) +   facet_wrap(~BrainRegion) +   geom_boxplot(aes(group=interaction(Cluster, Treatment), fill=Treatment)) +   scale_fill_manual(values=c(\"#fde725\",\"#482878\")) +   geom_point(position=position_dodge(width=0.8), size=0.75, aes(group=interaction(Cluster,Treatment), color=Sex)) +   ggtitle(\"2xLPS mouse dataset: K-means clusters\") +   labs(fill=\"Treatment\") +   theme_bw(base_size=14) +   theme(axis.text.x=element_text(angle=45, vjust=1, hjust=1))"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jennifer Kim. Author, maintainer. Paul Pavlidis. Author. Annie Vogel Ciernia. Author.","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kim J, Pavlidis P, Ciernia AV (2024). “Development High-Throughput Pipeline Characterize Microglia Morphological States Single-Cell Resolution.” eNeuro, 11(7), ENEURO.0014-24.2024. doi:10.1523/ENEURO.0014-24.2024.","code":"@Article{,   title = {Development of a High-Throughput Pipeline to Characterize Microglia Morphological States at a Single-Cell Resolution},   author = {Jennifer Kim and Paul Pavlidis and Annie Vogel Ciernia},   journal = {eNeuro},   year = {2024},   volume = {11},   number = {7},   pages = {ENEURO.0014-24.2024},   doi = {10.1523/ENEURO.0014-24.2024}, }"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/index.html","id":"microgliamorphologyr","dir":"","previous_headings":"","what":"R Package For Microglia Morphology Analysis","title":"R Package For Microglia Morphology Analysis","text":"Created: 26 June, 2023Last updated: 06 August, 2024","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/index.html","id":"welcome-to-microgliamorphologyr","dir":"","previous_headings":"","what":"Welcome to MicrogliaMorphologyR!","title":"R Package For Microglia Morphology Analysis","text":"MicrogliaMorphologyR R package microglia morphology analysis, complimentary ImageJ macro MicrogliaMorphology. Using MicrogliaMorphologyR, can perform exploratory data analysis visualization 27 different morphology features, characterize morphological cluster identities, quantify shifts morphological populations, generate heatmap boxplot visualizations data flexible ways including single-cell level, animal-level, experimental condition-level, perform statistical analysis data.","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/index.html","id":"if-you-are-using-this-tool-please-cite-the-following-publication","dir":"","previous_headings":"Welcome to MicrogliaMorphologyR!","what":"If you are using this tool, please cite the following publication:","title":"R Package For Microglia Morphology Analysis","text":"Development high-throughput pipeline characterize microglia morphological states single-cell resolution Kim J, Pavlidis P, Ciernia AV. Development High-Throughput Pipeline Characterize Microglia Morphological States Single-Cell Resolution. eNeuro. 2024 Jul 30;11(7):ENEURO.0014-24.2024. doi: 10.1523/ENEURO.0014-24.2024. PMID: 39029952; PMCID: PMC11289588.","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/index.html","id":"how-to-install-microgliamorphologyr","dir":"","previous_headings":"","what":"How to install MicrogliaMorphologyR","title":"R Package For Microglia Morphology Analysis","text":"","code":"# install devtools package if you don't have it already install.packages(\"devtools\")  # install MicrogliaMorphologyR using devtools devtools::install_github('ciernialab/MicrogliaMorphologyR')"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/index.html","id":"how-to-use-microgliamorphologyr","dir":"","previous_headings":"","what":"How to use MicrogliaMorphologyR","title":"R Package For Microglia Morphology Analysis","text":"Visit package website tutorial use MicrogliaMorphologyR using example dataset comes package.","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/index.html","id":"microglia-morphology","dir":"","previous_headings":"","what":"Microglia morphology","title":"R Package For Microglia Morphology Analysis","text":"Microglia exhibit dynamic range morphologies context-specific often rapidly changing response environmental cues. microglia realistically exist along continuous spectrum morphology, can categorize commonly observed forms study microglia morphology. , highlight four commonly studied morphological classes, others also characterized including hyper-ramified, dystrophic, satellite, etc. MicrogliaMorphologyR can also used characterize additional morphologies beyond four.  Ameboid = round, processes Hypertrophic = thicker, shorter processes larger soma Rod-like = elongated soma bipolar processes Ramified = smaller soma long, highly branched processes recent relevant reviews can read gain background microglia morphology project: Microglial morphometric analysis: many options, little consistency (Reddaway et al., 2023) Microglia states nomenclature: field crossroads (Paolicelli et al., 2022) Morphology Microglia Across Contexts Health Disease (Savage et al., 2019)","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/MicrogliaMorphologyR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"MicrogliaMorphologyR: R Package For Microglia Morphology Analysis — MicrogliaMorphologyR-package","title":"MicrogliaMorphologyR: R Package For Microglia Morphology Analysis — MicrogliaMorphologyR-package","text":"MicrogliaMorphologyR complimentary ImageJ macro MicrogliaMorphology. can use MicrogliaMorphologyR perform exploratory data analysis visualization 27 different morphology features, characterize morphological cluster identities, quantify shifts morphological populations, generate heatmap boxplot visualizations data flexible ways including single-cell level, animal-level, experimental condition-level, perform statistical analysis data.","code":""},{"path":[]},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/MicrogliaMorphologyR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MicrogliaMorphologyR: R Package For Microglia Morphology Analysis — MicrogliaMorphologyR-package","text":"Maintainer: Jennifer Kim jenn_kim@outlook.com (ORCID)","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/cell.level_boxplots.html","id":null,"dir":"Reference","previous_headings":"","what":"Data visualization: individual morphology measures — cell.level_boxplots","title":"Data visualization: individual morphology measures — cell.level_boxplots","text":"Linear mixed model statistically assess experimental variables interest influence morphology measure, cell level","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/cell.level_boxplots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data visualization: individual morphology measures — cell.level_boxplots","text":"","code":"cell.level_boxplots(data, group)"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/cell.level_boxplots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data visualization: individual morphology measures — cell.level_boxplots","text":"data input data frame group variable want group data ","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/celldensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate microglia density — celldensity","title":"Calculate microglia density — celldensity","text":"'celldensity' loads Areas.csv file MicrogliaMorphology, contains areas images rois within images, calculates density microglia cells image","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/celldensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate microglia density — celldensity","text":"","code":"celldensity(AreasPath, SamplesizeDF)"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/celldensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate microglia density — celldensity","text":"AreasPath path Areas.csv file output MicrogliaMorphology SampleSizeDF dataframe cell numbers generated 'samplesize' function within MicrogliaMorphologyR","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/clusterfeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster-specific average morphology measures — clusterfeatures","title":"Cluster-specific average morphology measures — clusterfeatures","text":"'clusterfeatures' generates heatmap visualization average cluster-specific morphology measures relative clusters","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/clusterfeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster-specific average morphology measures — clusterfeatures","text":"","code":"clusterfeatures(data, featurestart, featureend)"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/clusterfeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster-specific average morphology measures — clusterfeatures","text":"data input data frame featurestart first column number morphology measures featureend last column number morphology measures","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/clusterpercentage.html","id":null,"dir":"Reference","previous_headings":"","what":"What are your morphology cluster percentages across variables of interest? — clusterpercentage","title":"What are your morphology cluster percentages across variables of interest? — clusterpercentage","text":"'clusterpercentage' groups data variables interest calculates percentage morphology cluster within groups.","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/clusterpercentage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"What are your morphology cluster percentages across variables of interest? — clusterpercentage","text":"","code":"clusterpercentage(data, clustercol, ...)"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/clusterpercentage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"What are your morphology cluster percentages across variables of interest? — clusterpercentage","text":"data input data frame clustercol name column contains cluster IDs. Make sure put quotes. ... list variables interest without combining (e.g., Cohort, Sex, Treatment)","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/clusterpercentage_boxplots.html","id":null,"dir":"Reference","previous_headings":"","what":"How do morphology cluster percentages vary across variables of interest? — clusterpercentage_boxplots","title":"How do morphology cluster percentages vary across variables of interest? — clusterpercentage_boxplots","text":"'clusterpercentage_boxplots' generates boxplots depict cluster shifts experimental variables interest","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/clusterpercentage_boxplots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"How do morphology cluster percentages vary across variables of interest? — clusterpercentage_boxplots","text":"","code":"clusterpercentage_boxplots(data, ...)"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/clusterpercentage_boxplots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"How do morphology cluster percentages vary across variables of interest? — clusterpercentage_boxplots","text":"data input data frame ... list variables interest without combining (e.g., Cohort, Sex, Treatment)","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/clusterplots.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot to show morphology clusters in PC space — clusterplots","title":"Plot to show morphology clusters in PC space — clusterplots","text":"'clusterplots' visualizes k-means morphology clusters PC space","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/clusterplots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot to show morphology clusters in PC space — clusterplots","text":"","code":"clusterplots(data, pc.xaxis, pc.yaxis)"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/clusterplots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot to show morphology clusters in PC space — clusterplots","text":"data input data frame pc.xaxis pc values want x-axis (e.g, PC1) pc.yaxis pce values want y-axis (e.g., PC2)","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/data_1xLPS_mouse.html","id":null,"dir":"Reference","previous_headings":"","what":"1xLPS mouse dataset — data_1xLPS_mouse","title":"1xLPS mouse dataset — data_1xLPS_mouse","text":"Mouse microglia cells regions interest encompassing hippocampus, white matter tracks, overlaying cortex. Mice given single 1 mg/kg LPS intraperitoneal injection PBS vehicle brains collected 24 hours later.","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/data_1xLPS_mouse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"1xLPS mouse dataset — data_1xLPS_mouse","text":"","code":"data_1xLPS_mouse"},{"path":[]},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/data_1xLPS_mouse.html","id":"data-xlps-mouse","dir":"Reference","previous_headings":"","what":"data_1xLPS_mouse","title":"1xLPS mouse dataset — data_1xLPS_mouse","text":"data frame 15,293 rows 34 columns: Antibody Iba1 MouseID 1_F, 1_M, 2_F, 2_M, 3_F, 4_F, 4_M, 5_M Sex F, M Treatment PBS, LPS ID Individual Cell ID UniqueID Unique descriptor cell dataset 27 morphology features: Columns 7-33 Foreground pixels, Density foreground pixels hull area, Span ratio hull: major/minor axis, Maximum span across hull, Area, Perimeter, Circularity, Width bounding rectangle, Height bounding rectangle, Maximum radius hull's center mass, Max/min radii hull's center mass, Relative variation radii hull's center mass, Mean radius, Diameter bounding circle, Maximum radius circle's center mass, Max/min radii circle's center mass, Relative variation radii circle's center mass, Mean radius circle's center mass, # branches, # junctions, # end point voxels, # junction voxels, # slab voxels, Average branch length # triple points, # quadruple points, Maximum branch length","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/data_2xLPS_mouse.html","id":null,"dir":"Reference","previous_headings":"","what":"2xLPS mouse dataset — data_2xLPS_mouse","title":"2xLPS mouse dataset — data_2xLPS_mouse","text":"Mouse microglia cells frontal cortex, striatum, hippocampal subregions. Mice given two daily 0.5 mg/kg LPS intraperitoneal injections PBS vehicle injections brains collected 3 hours final injection.","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/data_2xLPS_mouse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"2xLPS mouse dataset — data_2xLPS_mouse","text":"","code":"data_2xLPS_mouse"},{"path":[]},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/data_2xLPS_mouse.html","id":"data-xlps-mouse","dir":"Reference","previous_headings":"","what":"data_2xLPS_mouse","title":"2xLPS mouse dataset — data_2xLPS_mouse","text":"data frame 43,332 rows 35 columns: Antibody Cx3cr1, Iba1, P2ry12 MouseID 1, 2, 3, 4, 5, 6 Sex F, M Treatment PBS, 2xLPS BrainRegion frontal cortex (FC), striatum (STR), hippocampus (HC) Subregion frontal cortex: infralimbic (IL), prelimbic (PL), anterior cingulate cortex (ACC); hippocampus: CA1, CA2, CA3, dentate gyrus (DG); stratium: caudate putamen (CP), nucleus accumbens (NA) ID Individual Cell ID UniqueID Unique descriptor cell dataset 27 morphology features: Columns 9-35 Foreground pixels, Density foreground pixels hull area, Span ratio hull: major/minor axis, Maximum span across hull, Area, Perimeter, Circularity, Width bounding rectangle, Height bounding rectangle, Maximum radius hull's center mass, Max/min radii hull's center mass, Relative variation radii hull's center mass, Mean radius, Diameter bounding circle, Maximum radius circle's center mass, Max/min radii circle's center mass, Relative variation radii circle's center mass, Mean radius circle's center mass, # branches, # junctions, # end point voxels, # junction voxels, # slab voxels, Average branch length # triple points, # quadruple points, Maximum branch length","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/data_2xLPS_mouse_fuzzykmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"2xLPS fuzzy k-means soft clustering dataset — data_2xLPS_mouse_fuzzykmeans","title":"2xLPS fuzzy k-means soft clustering dataset — data_2xLPS_mouse_fuzzykmeans","text":"Mouse microglia cells frontal cortex, striatum, hippocampal subregions. Mice given two daily 0.5 mg/kg LPS intraperitoneal injections PBS vehicle injections brains collected 3 hours final injection.","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/data_2xLPS_mouse_fuzzykmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"2xLPS fuzzy k-means soft clustering dataset — data_2xLPS_mouse_fuzzykmeans","text":"","code":"data_2xLPS_mouse_fuzzykmeans"},{"path":[]},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/data_2xLPS_mouse_fuzzykmeans.html","id":"data-xlps-mouse-fuzzykmeans","dir":"Reference","previous_headings":"","what":"data_2xLPS_mouse_fuzzykmeans","title":"2xLPS fuzzy k-means soft clustering dataset — data_2xLPS_mouse_fuzzykmeans","text":"data frame 43,332 rows 43 columns: Antibody Cx3cr1, Iba1, P2ry12 MouseID 1, 2, 3, 4, 5, 6 Sex F, M Treatment PBS, 2xLPS BrainRegion frontal cortex (FC), striatum (STR), hippocampus (HC) Subregion frontal cortex: infralimbic (IL), prelimbic (PL), anterior cingulate cortex (ACC); hippocampus: CA1, CA2, CA3, dentate gyrus (DG); stratium: caudate putamen (CP), nucleus accumbens (NA) ID Individual Cell ID UniqueID Unique descriptor cell dataset 27 morphology features: Columns 9-35 Foreground pixels, Density foreground pixels hull area, Span ratio hull: major/minor axis, Maximum span across hull, Area, Perimeter, Circularity, Width bounding rectangle, Height bounding rectangle, Maximum radius hull's center mass, Max/min radii hull's center mass, Relative variation radii hull's center mass, Mean radius, Diameter bounding circle, Maximum radius circle's center mass, Max/min radii circle's center mass, Relative variation radii circle's center mass, Mean radius circle's center mass, # branches, # junctions, # end point voxels, # junction voxels, # slab voxels, Average branch length # triple points, # quadruple points, Maximum branch length PC 1-3 loadings: Columns 36-38 PC1, PC2, PC3 Fuzzy k-means cluster membership scores: Columns 39-42 Cluster 1, Cluster 2, Cluster 3, Cluster 4 Hard clustering assignment: Cluster 1, 2, 3, 4","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/data_ImageTypeComparison.html","id":null,"dir":"Reference","previous_headings":"","what":"2xLPS mouse dataset from frontal cortex, striatum, and hippocampal subregions — data_ImageTypeComparison","title":"2xLPS mouse dataset from frontal cortex, striatum, and hippocampal subregions — data_ImageTypeComparison","text":"2xLPS mouse dataset frontal cortex, striatum, hippocampal subregions","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/data_ImageTypeComparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"2xLPS mouse dataset from frontal cortex, striatum, and hippocampal subregions — data_ImageTypeComparison","text":"","code":"data_ImageTypeComparison"},{"path":[]},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/data_ImageTypeComparison.html","id":"data-imagetypecomparison","dir":"Reference","previous_headings":"","what":"data_ImageTypeComparison","title":"2xLPS mouse dataset from frontal cortex, striatum, and hippocampal subregions — data_ImageTypeComparison","text":"data frame 60 rows 13 columns: CellID ameboid1-5, hypertrophic1-5, ramified1-5, rod1-5 MorphologyClass ameboid, hypertrophic, ramified, rod ID 1, 2, 3, 4, 5 ImageType 2D, 3D, EDF AnalyzeSkeleton measures: Columns 5-13 # branches, # junctions, # end point voxels, # junction voxels, # slab voxels, Average branch length # triple points, # quadruple points, Maximum branch length","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/featurecorrelations.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation heatmap across morphology features — featurecorrelations","title":"Correlation heatmap across morphology features — featurecorrelations","text":"'featurecorrelations' allows generate heatmap depicting significant correlations across features","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/featurecorrelations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation heatmap across morphology features — featurecorrelations","text":"","code":"featurecorrelations(data, featurestart, featureend, rthresh, pthresh, title)"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/featurecorrelations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation heatmap across morphology features — featurecorrelations","text":"data input data frame featurestart first column number morphology measures featureend last column number morphology measures rthresh cutoff threshold significant correlation values pthresh cutoff threshold significant p-values title want name heatmap","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/featurecorrelations_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Underlying stats for correlation heatmap across morphology features — featurecorrelations_stats","title":"Underlying stats for correlation heatmap across morphology features — featurecorrelations_stats","text":"function complementary 'featurecorrelations' function. 'featurecorrelations_stats' outputs dataframe containing correlation pvalues related featurecorrelations heatmap.","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/featurecorrelations_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Underlying stats for correlation heatmap across morphology features — featurecorrelations_stats","text":"","code":"featurecorrelations_stats(data, featurestart, featureend, rthresh, pthresh)"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/featurecorrelations_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Underlying stats for correlation heatmap across morphology features — featurecorrelations_stats","text":"data input data frame featurestart first column number morphology measures featureend last column number morphology measures rthresh cutoff threshold significant correlation values pthresh cutoff threshold significant p-values","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/fraclac_tidying.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy up your FracLac output — fraclac_tidying","title":"Tidy up your FracLac output — fraclac_tidying","text":"'fraclac_tidying' loads FracLac output cleans names cells","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/fraclac_tidying.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy up your FracLac output — fraclac_tidying","text":"","code":"fraclac_tidying(dir)"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/fraclac_tidying.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy up your FracLac output — fraclac_tidying","text":"dir directory containing 'Hull Circles Results.txt' file FracLac output","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/logscale.html","id":null,"dir":"Reference","previous_headings":"","what":"Log scale — logscale","title":"Log scale — logscale","text":"'logscale' allows log scale values","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/logscale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log scale — logscale","text":"","code":"logscale(x, y)"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/logscale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log scale — logscale","text":"x input values y constant value want add (e.g., 0, 0.1, 1)","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/merge_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge FracLac and AnalyzeSkeleton results together into one final cell-level data frame — merge_data","title":"Merge FracLac and AnalyzeSkeleton results together into one final cell-level data frame — merge_data","text":"'merge_data' merges FracLac AnalyzeSkeleton results Name ID, gets rid non-numerical data, brushes feature names. final output dataframe, every row cell every column identifier one 27 unique morphology features.","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/merge_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge FracLac and AnalyzeSkeleton results together into one final cell-level data frame — merge_data","text":"","code":"merge_data(fraclac, skeleton)"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/merge_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge FracLac and AnalyzeSkeleton results together into one final cell-level data frame — merge_data","text":"fraclac tidied fraclac output skeleton tidied skeleton output","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/metadata_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy up metadata — metadata_columns","title":"Tidy up metadata — metadata_columns","text":"'metadata_columns' allows extract individual metadata columns UniqueID column. piece metadata separated common deliminator, 'sep' parameter","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/metadata_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy up metadata — metadata_columns","text":"","code":"metadata_columns(data, metadata, sep)"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/metadata_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy up metadata — metadata_columns","text":"data tidied dataframe containing numerical morphology data metadata metadata listed order appear 'Name' column: e.g., c(\"Cohort\",\"Sex\",\"MouseID\") sep character, \"_\" \"-\", separates metadata","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/minmax.html","id":null,"dir":"Reference","previous_headings":"","what":"Min-max scaling — minmax","title":"Min-max scaling — minmax","text":"'minmax' allows min-max normalize values","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/minmax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Min-max scaling — minmax","text":"","code":"minmax(x)"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/minmax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Min-max scaling — minmax","text":"x input values","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/normalize_logplots.html","id":null,"dir":"Reference","previous_headings":"","what":"Exploratory data analysis: normalization methods — normalize_logplots","title":"Exploratory data analysis: normalization methods — normalize_logplots","text":"'normalize_logplots' allows check distributions features log normalization (e.g., log10(value+0.1))","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/normalize_logplots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exploratory data analysis: normalization methods — normalize_logplots","text":"","code":"normalize_logplots(data, x)"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/normalize_logplots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exploratory data analysis: normalization methods — normalize_logplots","text":"data final dataframe contains gathered data (measure, value) format x constant value want add (e.g., 0, 0.1, 1)","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/normalize_minmax.html","id":null,"dir":"Reference","previous_headings":"","what":"Exploratory data analysis: min-max scaled plots — normalize_minmax","title":"Exploratory data analysis: min-max scaled plots — normalize_minmax","text":"'normalize_minmax' allows check distributions features min-max normalizing get values measure constrained 0-1 range.","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/normalize_minmax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exploratory data analysis: min-max scaled plots — normalize_minmax","text":"","code":"normalize_minmax(data)"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/normalize_minmax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exploratory data analysis: min-max scaled plots — normalize_minmax","text":"data final dataframe contains gathered data (measure, value) format","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/normalize_scaled.html","id":null,"dir":"Reference","previous_headings":"","what":"Exploratory data analysis: scaled plots — normalize_scaled","title":"Exploratory data analysis: scaled plots — normalize_scaled","text":"'normalize_scaled' allows check distributions features scaling (e.g., scale(value))","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/normalize_scaled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exploratory data analysis: scaled plots — normalize_scaled","text":"","code":"normalize_scaled(data)"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/normalize_scaled.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exploratory data analysis: scaled plots — normalize_scaled","text":"data final dataframe contains gathered data (measure, value) format","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/outliers_boxplots.html","id":null,"dir":"Reference","previous_headings":"","what":"Exploratory data analysis: outlier detection — outliers_boxplots","title":"Exploratory data analysis: outlier detection — outliers_boxplots","text":"'outliers_boxplots' generates boxplots morphology features visualize broader ranges might dominate analysis downstream.","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/outliers_boxplots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exploratory data analysis: outlier detection — outliers_boxplots","text":"","code":"outliers_boxplots(data)"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/outliers_boxplots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exploratory data analysis: outlier detection — outliers_boxplots","text":"data final dataframe contains gathered data (measure, value) format","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/outliers_distributions.html","id":null,"dir":"Reference","previous_headings":"","what":"Exploratory data analysis: outlier detection — outliers_distributions","title":"Exploratory data analysis: outlier detection — outliers_distributions","text":"'outliers_distributions' generates plots feature distributions determine features skewed distributions normalize values analysis downstream.","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/outliers_distributions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exploratory data analysis: outlier detection — outliers_distributions","text":"","code":"outliers_distributions(data)"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/outliers_distributions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exploratory data analysis: outlier detection — outliers_distributions","text":"data final dataframe contains gathered data (measure, value) format","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/pcadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Dimensionality reduction using PCA — pcadata","title":"Dimensionality reduction using PCA — pcadata","text":"'pcadata' allows perform PCA analysis update dataframe include PCs interest","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/pcadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimensionality reduction using PCA — pcadata","text":"","code":"pcadata(data, featurestart, featureend, pc.start, pc.end)"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/pcadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dimensionality reduction using PCA — pcadata","text":"data input data frame featurestart first column number morphology measures featureend last column number morphology measures pc.start first PC want included (e.g., PC1) pc.end last PC want included (e.g., PC4)","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/pcadata_elbow.html","id":null,"dir":"Reference","previous_headings":"","what":"Dimensionality reduction using PCA and elbow/scree plot to get variance explained — pcadata_elbow","title":"Dimensionality reduction using PCA and elbow/scree plot to get variance explained — pcadata_elbow","text":"'pcadata_elbow' allows perform PCA analysis update dataframe","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/pcadata_elbow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimensionality reduction using PCA and elbow/scree plot to get variance explained — pcadata_elbow","text":"","code":"pcadata_elbow(data, featurestart, featureend)"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/pcadata_elbow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dimensionality reduction using PCA and elbow/scree plot to get variance explained — pcadata_elbow","text":"data input data frame featurestart first column number morphology measures featureend last column number morphology measures","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/pcfeaturecorrelations.html","id":null,"dir":"Reference","previous_headings":"","what":"What morphology features describe the PCs? — pcfeaturecorrelations","title":"What morphology features describe the PCs? — pcfeaturecorrelations","text":"'pcfeaturecorrelations' allows perform correlations top PCs morphology features assess features driving variability captured PCs.","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/pcfeaturecorrelations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"What morphology features describe the PCs? — pcfeaturecorrelations","text":"","code":"pcfeaturecorrelations(   pca_data,   pc.start,   pc.end,   feature.start,   feature.end,   rthresh,   pthresh,   title )"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/pcfeaturecorrelations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"What morphology features describe the PCs? — pcfeaturecorrelations","text":"pc.start first PC want included analysis (e.g., PC1) pc.end last PC want included analysis (e.g., PC4) feature.start first column number morphology measures feature.end last column number morphology measures rthresh cutoff threshold significant correlation values pthresh cutoff threshold significant p-values title want name heatmap data input data frame","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/pcfeaturecorrelations_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Underlying stats for correlation heatmap exploring which morphologies describe the PCs — pcfeaturecorrelations_stats","title":"Underlying stats for correlation heatmap exploring which morphologies describe the PCs — pcfeaturecorrelations_stats","text":"function complementary 'pcfeaturecorrelations' function. 'pcfeaturecorrelations_stats' outputs dataframe containing correlation pvalues related pcfeaturecorrelations heatmap.","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/pcfeaturecorrelations_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Underlying stats for correlation heatmap exploring which morphologies describe the PCs — pcfeaturecorrelations_stats","text":"","code":"pcfeaturecorrelations_stats(   pca_data,   pc.start,   pc.end,   feature.start,   feature.end,   rthresh,   pthresh )"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/pcfeaturecorrelations_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Underlying stats for correlation heatmap exploring which morphologies describe the PCs — pcfeaturecorrelations_stats","text":"pc.start first PC want included analysis (e.g., PC1) pc.end last PC want included analysis (e.g., PC4) feature.start first column number morphology measures feature.end last column number morphology measures rthresh cutoff threshold significant correlation values pthresh cutoff threshold significant p-values data input data frame","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/plots_expvariable.html","id":null,"dir":"Reference","previous_headings":"","what":"Explore how experimental variables describe data — plots_expvariable","title":"Explore how experimental variables describe data — plots_expvariable","text":"'plots_expvariable' colors points pc space experimental variables","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/plots_expvariable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Explore how experimental variables describe data — plots_expvariable","text":"","code":"plots_expvariable(data, pc.xaxis, pc.yaxis)"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/plots_expvariable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Explore how experimental variables describe data — plots_expvariable","text":"data input data frame pc.xaxis pc values want x-axis (e.g, PC1) pc.yaxis pc values want y-axis (e.g., PC2)","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/samplesize.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample size — samplesize","title":"Sample size — samplesize","text":"'samplesize' allows obtain sample size experimental groups based variables interest","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/samplesize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample size — samplesize","text":"","code":"samplesize(data, ...)"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/samplesize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample size — samplesize","text":"data input dataframe ... list variables interest without combining (e.g., Cohort, Sex, Treatment)","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/skeleton_tidying.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate your individual AnalyzeSkeleton output files into one dataframe — skeleton_tidying","title":"Concatenate your individual AnalyzeSkeleton output files into one dataframe — skeleton_tidying","text":"'skeleton_tidying' loads AnalyzeSkeleton output clean IDs match FracLac data downstream merging data cell level.","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/skeleton_tidying.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate your individual AnalyzeSkeleton output files into one dataframe — skeleton_tidying","text":"","code":"skeleton_tidying(dir)"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/skeleton_tidying.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate your individual AnalyzeSkeleton output files into one dataframe — skeleton_tidying","text":"dir directory containing individual AnalyzeSkeleton .csv result files output MicrogliaMorphology","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/stats_cluster.animal.html","id":null,"dir":"Reference","previous_headings":"","what":"Stats analysis: cluster-level changes — stats_cluster.animal","title":"Stats analysis: cluster-level changes — stats_cluster.animal","text":"Linear mixed model statistically assess experimental variables interest influence cluster percentages, animal level. output[1] contains anova results, output[2] output[3] contain posthoc results, output[4] contains model fit checks (read Details section), output[5] contains information model.","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/stats_cluster.animal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stats analysis: cluster-level changes — stats_cluster.animal","text":"","code":"stats_cluster.animal(data, model, posthoc1, posthoc2, adjust)"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/stats_cluster.animal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stats analysis: cluster-level changes — stats_cluster.animal","text":"data input data frame model linear mixed model (e.g., Value ~ Cluster*Treatment + (1|MouseID)) posthoc1 first set posthoc comparisons (e.g., ~Cluster|Treatment) posthoc2 second set posthoc comparisons (e.g., ~Cluster) adjust method multiple test correction (emmeans package: \"tukey\",\"scheffe\",\"sidak\",\"dunnettx\",\"mvt\",\"holm\", \"hochberg\", \"hommel\", \"bonferroni\", \"BH\", \"\", \"fdr\",\"none\"). See \"P-value adjustments\" section ?emmeans::summary.emmGrid information.","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/stats_cluster.animal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stats analysis: cluster-level changes — stats_cluster.animal","text":"stats_cluster.animal function fits generalized linear mixed model dataset beta distribution, suitable values like percentages probabilities constrained range 0-1, using glmmTMB package. Part output includes check model fit using DHARMa package, \"uses simulation-based approach create readily interpretable scaled (quantile) residuals fitted (generalized) linear mixed models.\" function creates two DHARMa plots, contained output[4]. can read interpret model fit using DHARMa reading package vignette.","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/stats_morphologymeasures.animal.html","id":null,"dir":"Reference","previous_headings":"","what":"Stats analysis: individual morphology measures — stats_morphologymeasures.animal","title":"Stats analysis: individual morphology measures — stats_morphologymeasures.animal","text":"Linear mixed model statistically assess experimental variables interest influence morphology measure, subject level. output[1] contains anova results, output[2] output[3] contain posthoc results, output[4] contains qqplots check normality assumptions, output[5] contains shapiro test results.","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/stats_morphologymeasures.animal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stats analysis: individual morphology measures — stats_morphologymeasures.animal","text":"","code":"stats_morphologymeasures.animal(data, model, type, posthoc1, posthoc2, adjust)"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/stats_morphologymeasures.animal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stats analysis: individual morphology measures — stats_morphologymeasures.animal","text":"data input data frame model model (e.g., Value ~ Treatment*Sex + (1|MouseID)) type type model want fit. \"lm\" fixed effects \"lmer\" mixed effects (lme4 package) posthoc1 posthoc comparisons (e.g., considering sex: ~Treatment|Sex) posthoc2 posthoc comparisons (e.g., considering sex: ~Treatment) adjust method multiple test correction (emmeans package: \"tukey\",\"scheffe\",\"sidak\",\"dunnettx\",\"mvt\",\"holm\", \"hochberg\", \"hommel\", \"bonferroni\", \"BH\", \"\", \"fdr\",\"none\"). See \"P-value adjustments\" section ?emmeans::summary.emmGrid information.","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/stats_morphologymeasures.animal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stats analysis: individual morphology measures — stats_morphologymeasures.animal","text":"stats_morphologymeasures.animal function fits linear model using 'lm' function fixed effects 'lmer' function lme4 package mixed effects morphology measure individually within dataset. Posthocs run morphology measure individually bound together final dataframe output function.","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/transform_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform data: Log scale — transform_log","title":"Transform data: Log scale — transform_log","text":"'transform_log' allows log scale dataframe","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/transform_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform data: Log scale — transform_log","text":"","code":"transform_log(data, x, start, end)"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/transform_log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform data: Log scale — transform_log","text":"data input dataframe x constant value want add (e.g., 0.1, 1) start first column number morphology measures end last column number morphology measures","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/transform_minmax.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform data: Min-max scaling — transform_minmax","title":"Transform data: Min-max scaling — transform_minmax","text":"'transform_minmax' allows min-max scale dataframe within morphology measure","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/transform_minmax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform data: Min-max scaling — transform_minmax","text":"","code":"transform_minmax(data, start, end)"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/transform_minmax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform data: Min-max scaling — transform_minmax","text":"data input dataframe start first column number morphology measures end last column number morphology measures","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/transform_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform data: Scaling — transform_scale","title":"Transform data: Scaling — transform_scale","text":"'transform_scale' allows center scale dataframe within morphology measure calculate z-scores using scale function R.","code":""},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/transform_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform data: Scaling — transform_scale","text":"","code":"transform_scale(data, start, end)"},{"path":"https://ciernialab.github.io/MicrogliaMorphologyR/reference/transform_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform data: Scaling — transform_scale","text":"data input dataframe start first column number data want scale end last column number data want scale","code":""}]
