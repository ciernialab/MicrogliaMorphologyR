library(usethis)
usethis::use_vignette()
library(MicrogliaMorphologyR)
rlang::last_trace()
knitr::opts_chunk$set(cache=TRUE)
data_2xLPS <- MicrogliaMorphologyR::data_2xLPS
str(data_2xLPS)
data_2xLPS_gathered <- data_2xLPS %>% gather(measure, value, 9:ncol(data_2xLPS))
library(tidyverse)
data_2xLPS_gathered <- data_2xLPS %>% gather(measure, value, 9:ncol(data_2xLPS))
# check for outliers
outliers_boxplots(data_2xLPS_gathered)
outliers_distributions(data_2xLPS_gathered)
# checking different normalization features
normalize_logplots(data_2xLPS_gathered,1)
normalize_minmax(data_2xLPS_gathered)
normalize_scaled(data_2xLPS_gathered)
# transform your data in appropriate manner for downstream analyses
data_2xLPS_logtransformed <- transform_log(data_2xLPS, 1, start=9, end=35)
data_2xLPS_minmaxtransformed <- transform_minmax(data_2xLPS, start=9, end=35)
data_2xLPS_scaled <- transform_scale(data_2xLPS, start=9, end=35)
# get sample size of data based on factors of interest
samplesize(data_2xLPS, MouseID, Antibody)
samplesize(data_2xLPS, Sex, Treatment, Antibody)
featurecorrelations(data_2xLPS, start=9, end=35, rthresh=0.8, pthresh=0.05, title="Correlations across features")
library(Hmisc)
featurecorrelations(data_2xLPS, start=9, end=35, rthresh=0.8, pthresh=0.05, title="Correlations across features")
library(pheatmap)
featurecorrelations(data_2xLPS, start=9, end=35, rthresh=0.8, pthresh=0.05, title="Correlations across features")
usethat::use_vignette("introduction")
install.packages("usethat")
library(usethat)
outliers_distributions(data_2xLPS_gathered)
# transform your data in appropriate manner for downstream analyses
data_2xLPS_logtransformed <- transform_log(data_2xLPS, 1, start=9, end=35)
featurecorrelations(data_2xLPS, start=9, end=35, rthresh=0.8, pthresh=0.05, title="Correlations across features")
set.seed(1)
pcadata_elbow(data_2xLPS_logtransformed, start=9, end=35)
library(factoextra)
pcadata_elbow(data_2xLPS_logtransformed, start=9, end=35)
pca_data <- pcadata(data_2xLPS_logtransformed, start=9, end=35,
pc.start=1, pc.end=10)
str(pca_data)
pcfeaturecorrelations(pca_data, pc.start=1, pc.end=5,
feature.start=19, feature.end=45,
rthresh=0.75, pthresh=0.05,
title="Correlation between PCs and features")
## for k-means clustering: scale PCs 1-3, which together describe ~85% of variability
pca_data_scale <- transform_scale(pca_data, start=1, end=3)
kmeans_input <- pca_data_scale[1:3]
# check for optimal number of clusters using wss and silhouette methods
set.seed(2)
sampling <- kmeans_input[sample(nrow(kmeans_input), 5000),] #sample 5000 random rows for cluster optimization
fviz_nbclust(sampling, kmeans, method = 'wss', nstart=50, iter.max=50) # 4 clusters
fviz_nbclust(sampling, kmeans, method = 'silhouette', nstart=50, iter.max=50) # 4 clusters
### k=3 ###
# cluster and combine with original data
k2 <- kmeans(kmeans_input, centers=3, nstart=75, iter.max=50)
kmeans_input
### k=3 ###
# cluster and combine with original data
k2 <- kmeans(kmeans_input, centers=3, nstart=50, iter.max=50)
### k=3 ###
# cluster and combine with original data
k2 <- kmeans(kmeans_input, centers=3, nstart=50, iter.max=75)
### k=3 ###
# cluster and combine with original data
k2 <- kmeans(kmeans_input, centers=3, nstart=75, iter.max=50)
### k=3 ###
# cluster and combine with original data
k2 <- kmeans(kmeans_input, centers=3, nstart=100, iter.max=50)
### k=3 ###
# cluster and combine with original data
k2 <- kmeans(kmeans_input, centers=3, nstart=500, iter.max=50)
### k=3 ###
# cluster and combine with original data
k2 <- kmeans(kmeans_input, centers=3, nstart=50, iter.max=50, algorithm="Lloyd")
### k=3 ###
# cluster and combine with original data
k2 <- kmeans(kmeans_input, centers=3, nstart=50, iter.max=50, algorithm="MacQueen")
### k=4 ###
# cluster and combine with original data
k2 <- kmeans(kmeans_input, centers=4, nstart=75, iter.max=50)
k2 <- kmeans(kmeans_input, centers=4)
k2
k2 <- kmeans(kmeans_input, centers=3)
?kmeans
### k=3 ###
# cluster and combine with original data
k2 <- kmeans(kmeans_input, centers=3, nstart=25)
### k=3 ###
# cluster and combine with original data
k2 <- kmeans(kmeans_input, centers=3, nstart=25)
### k=4 ###
# cluster and combine with original data
k2 <- kmeans(kmeans_input, centers=4)
pca_kmeans <- cbind(pca_data[1:2], data_2xLPS, as.data.frame(k2$cluster))
str(pca_kmeans)
# cluster-specific measures on average for each morphology feature, relative to other clusters
clusterfeatures(pca_kmeans, start=11, end=37)
# plot k-means clusters in PC space
clusterplots(pca_kmeans, "PC1", "PC2")
### k=3 ###
# cluster and combine with original data
k2 <- kmeans(kmeans_input, centers=3)
# plot k-means clusters in PC space
clusterplots(pca_kmeans, "PC1", "PC2")
pca_kmeans <- cbind(pca_data[1:2], data_2xLPS, as.data.frame(k2$cluster))
# cluster-specific measures on average for each morphology feature, relative to other clusters
clusterfeatures(pca_kmeans, start=11, end=37)
# plot k-means clusters in PC space
clusterplots(pca_kmeans, "PC1", "PC2")
k2 <- kmeans(kmeans_input, centers=3, nstart=25)
### k=3 ###
# cluster and combine with original data
k2 <- kmeans(kmeans_input, centers=3, nstart=10)
### k=3 ###
# cluster and combine with original data
k2 <- kmeans(kmeans_input, centers=3, nstart=5)
pca_kmeans <- cbind(pca_data[1:2], data_2xLPS, as.data.frame(k2$cluster))
str(pca_kmeans)
# cluster-specific measures on average for each morphology feature, relative to other clusters
clusterfeatures(pca_kmeans, start=11, end=37)
### k=3 ###
# cluster and combine with original data
k2 <- kmeans(kmeans_input, centers=3, nstart=8)
### k=3 ###
# cluster and combine with original data
k2 <- kmeans(kmeans_input, centers=3, nstart=9)
### k=3 ###
# cluster and combine with original data
k2 <- kmeans(kmeans_input, centers=3, nstart=10)
k2
k2$ifault
### k=3 ###
# cluster and combine with original data
k2 <- kmeans(kmeans_input, centers=3, nstart=25)
k2$ifault
### k=3 ###
# cluster and combine with original data
k2 <- kmeans(kmeans_input, centers=3, nstart=25)
k2$tot.withinss
### k=3 ###
# cluster and combine with original data
k2 <- kmeans(kmeans_input, centers=3)
k2$tot.withinss
fviz_nbclust(sampling, kmeans, method = 'wss') # 4 clusters
fviz_nbclust(kmeans_input, kmeans, method = 'wss') # 4 clusters
sampling <- kmeans_input[sample(nrow(kmeans_input), 5000),] #sample 5000 random rows for cluster optimization
sampling <- kmeans_input[sample(nrow(kmeans_input), 5000),] #sample 5000 random rows for cluster optimization
fviz_nbclust(kmeans_input, kmeans, method = 'wss') # 4 clusters
### k=3 ###
# cluster and combine with original data
k2 <- kmeans(kmeans_input, centers=3)
k2$tot.withinss
k2 <- kmeans(kmeans_input, centers=3, nstart=10)
k2$tot.withinss
k2 <- kmeans(kmeans_input, centers=3, nstart=50)
k2$tot.withinss
?kmeanspp
??kmeanspp
install.packages("maotai")
library(maotai)
test <- kmeanspp(kmeans_input, k=4)
kmeans_input
test <- kmeanspp(as.matrix(kmeans_input), k=4)
test
head(test)
pca_kmeans <- cbind(pca_data[1:2], data_2xLPS, as.data.frame(test))
head(pca_kmeans)
test %>% ggplot(aes(x=PC1, y=PC2, color=as.character(test))) + geom_point()
pca_kmeans %>% ggplot(aes(x=PC1, y=PC2, color=as.character(test))) + geom_point()
test <- kmeanspp(as.matrix(kmeans_input), k=4, nstart=25)
install.packages("LICORS")
test <- LICORS::kmeanspp(as.matrix(kmeans_input), k=4, nstart=25, iter.max=50)
library(LICORS)
install.packages("motifcluster")
library(motifcluster)
test <- kmeanspp(as.matrix(kmeans_input), k=4, nstart=25, iter.max=50)
pca_kmeans <- cbind(pca_data[1:2], data_2xLPS, as.data.frame(test))
test
pca_kmeans <- cbind(pca_data[1:2], data_2xLPS, as.data.frame(test$cluster))
pca_kmeans %>% ggplot(aes(x=PC1, y=PC2, color=as.character(test$cluster`))) + geom_point()
pca_kmeans %>% ggplot(aes(x=PC1, y=PC2, color=as.character(`test$cluster`))) + geom_point()
motifcluster
?motifcluster
??motifcluster
## for k-means clustering: scale PCs 1-3, which together describe ~85% of variability
pca_data_scale <- transform_scale(pca_data, start=1, end=3)
kmeans_input <- pca_data_scale[1:3]
data_2xLPS <- MicrogliaMorphologyR::data_2xLPS
str(data_2xLPS)
data_2xLPS_gathered <- data_2xLPS %>% gather(measure, value, 9:ncol(data_2xLPS))
# check for outliers
outliers_boxplots(data_2xLPS_gathered)
### k=4 ###
# cluster and combine with original data
k2 <- kmeans(kmeans_input, centers=4)
pca_kmeans <- cbind(pca_data[1:2], data_2xLPS, as.data.frame(k2$cluster))
str(pca_kmeans)
# cluster-specific measures on average for each morphology feature, relative to other clusters
clusterfeatures(pca_kmeans, start=11, end=37)
# plot k-means clusters in PC space
clusterplots(pca_kmeans, "PC1", "PC2")
# check for optimal number of clusters using wss and silhouette methods
set.seed(2)
sampling <- kmeans_input[sample(nrow(kmeans_input), 5000),] #sample 5000 random rows for cluster optimization
fviz_nbclust(kmeans_input, kmeans, method = 'wss') # 4 clusters
fviz_nbclust(sampling, kmeans, method = 'wss') # 4 clusters
fviz_nbclust(sampling, kmeans, method = 'wss', iter.max=50) # 4 clusters
fviz_nbclust(sampling, kmeans, method = 'silhouette', iter.max=50) # 4 clusters
fviz_nbclust(sampling, kmeans, method = 'gap stat', iter.max=50)
fviz_nbclust(sampling, kmeans, method = 'gap_stat', iter.max=50)
fviz_nbclust(sampling, kmeans, method = 'gap_stat', nstart=25, iter.max=50) # 4 clusters
library(flexclust)
install.packages("flexclust")
library(flexclust)
?kcca
kmeanspp
?kmeanspp
?kcca
result <- fcca(kmeans_input, k=4, family=kccaFamily("kmeans"), control=list(initcent="kmeanspp"))
result <- kcca(kmeans_input, k=4, family=kccaFamily("kmeans"), control=list(initcent="kmeanspp"))
result
result@cluster
pca_kmeans <- cbind(pca_data[1:2], data_2xLPS, as.data.frame(result@cluster))
# cluster-specific measures on average for each morphology feature, relative to other clusters
clusterfeatures(pca_kmeans, start=11, end=37)
pca_kmeans %>% ggplot(aes(x=PC1, y=PC2, color=as.character(`result@cluster`))) + geom_point()
clusterfeatures(pca_kmeans, start=11, end=37)
clusterfeatures
heatmap <- pca_kmeans %>% group_by(`result@cluster`) %>% summarise(across(start:end,
~mean(.x)))
heatmap <- pca_kmeans %>% group_by(`result@cluster`) %>% summarise(across(start:end,
~mean(.x)))
heatmap <- pca_kmeans %>% group_by(`result@cluster`) %>% summarise(across(11:37,
~mean(.x)))
heatmap$`result@cluster` <- paste0("Cluster ", heatmap$`result@cluster`)
heatmap <- column_to_rownames(heatmap, var = "result@cluster")
pheatmap(t(heatmap), scale = "row", cluster_cols = FALSE,
cluster_rows = TRUE, border_color = NA, fontsize = 12,
fontsize_row = 12, fontsize_col = 12, angle_col = 45)
# cluster and combine with original data
k2 <- kmeans(kmeans_input, centers=4)
pca_kmeans <- cbind(pca_data[1:2], data_2xLPS, as.data.frame(k2$cluster))
str(pca_kmeans)
# cluster-specific measures on average for each morphology feature, relative to other clusters
clusterfeatures(pca_kmeans, start=11, end=37)
clusterfeatures(pca_kmeans, start=11, end=37)
clusterplots(pca_kmeans, "PC1", "PC2")
set.seed(3)
data_fuzzykmeans <- fcm(kmeans_input, centers=4)
library(fcm)
??fcm
library(ppclust)
library(ppclust)
set.seed(3)
data_fuzzykmeans <- fcm(kmeans_input, centers=4)
data_fuzzykmeans
kmeans_input
data_fuzzykmeans$cluster
data_fuzzykmeans$u
test2 <- ppclust2(data_fuzzykmeans, "kmeans")
test2
data_pca_fuzzykmeans <- cbind(pca_data[1:2], data_2xLPS, as.data.frame(data_fuzzykmeans$u))
data_pca_fuzzykmeans
data_pca_fuzzykmeans <- cbind(pca_data[1:2], data_2xLPS, as.data.frame(data_fuzzykmeans$u),
as.data.frame(data_fuzzykmeans$cluster) %>% rename(Cluster=`data_fuzzykmeans$cluster`))
head(data_pca_fuzzykmeans)
data_pca_fuzzykmeans %>% ggplot(aes(x=PC1, y=PC2, color=as.character(Cluster))) + geom_point()
?save
setwd("/Users/Analysis2 Computer/Desktop/Jenn/")
setwd("/Users/Analysis2 Computer/Desktop/Jenn/")
getwd()
save(data_fuzzkmeans, file="data_fuzzykmeans.rda")
save(data_fuzzykmeans, file="data_fuzzykmeans.rda")
save(data_pca_fuzzykmeans, file="data_pca_fuzzykmeans.rda")
